
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AcademicYears
 * const academicYears = await prisma.academicYear.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "generated/prisma/query_engine-windows.dll.node")

/**
 * Model AcademicYear
 * 
 */
export type AcademicYear = Prisma.AcademicYearModel
/**
 * Model Organization
 * 
 */
export type Organization = Prisma.OrganizationModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Teacher
 * 
 */
export type Teacher = Prisma.TeacherModel
/**
 * Model TeacherProfile
 * 
 */
export type TeacherProfile = Prisma.TeacherProfileModel
/**
 * Model Subject
 * 
 */
export type Subject = Prisma.SubjectModel
/**
 * Model TeachingAssignment
 * 
 */
export type TeachingAssignment = Prisma.TeachingAssignmentModel
/**
 * Model Grade
 * 
 */
export type Grade = Prisma.GradeModel
/**
 * Model Section
 * 
 */
export type Section = Prisma.SectionModel
/**
 * Model Student
 * 
 */
export type Student = Prisma.StudentModel
/**
 * Model Parent
 * 
 */
export type Parent = Prisma.ParentModel
/**
 * Model ParentStudent
 * 
 */
export type ParentStudent = Prisma.ParentStudentModel
/**
 * Model StudentAttendance
 * 
 */
export type StudentAttendance = Prisma.StudentAttendanceModel
/**
 * Model StudentDocument
 * 
 */
export type StudentDocument = Prisma.StudentDocumentModel
/**
 * Model Fee
 * 
 */
export type Fee = Prisma.FeeModel
/**
 * Model FeePayment
 * 
 */
export type FeePayment = Prisma.FeePaymentModel
/**
 * Model ScheduledJob
 * 
 */
export type ScheduledJob = Prisma.ScheduledJobModel
/**
 * Model FeeCategory
 * 
 */
export type FeeCategory = Prisma.FeeCategoryModel
/**
 * Model AcademicCalendar
 * 
 */
export type AcademicCalendar = Prisma.AcademicCalendarModel
/**
 * Model AnonymousComplaint
 * 
 */
export type AnonymousComplaint = Prisma.AnonymousComplaintModel
/**
 * Model ComplaintStatusTimeline
 * 
 */
export type ComplaintStatusTimeline = Prisma.ComplaintStatusTimelineModel
/**
 * Model Notice
 * 
 */
export type Notice = Prisma.NoticeModel
/**
 * Model NotificationLog
 * 
 */
export type NotificationLog = Prisma.NotificationLogModel
/**
 * Model Performance
 * 
 */
export type Performance = Prisma.PerformanceModel

export type PlanType = $Enums.PlanType
export const PlanType = $Enums.PlanType

export type NoticeType = $Enums.NoticeType
export const NoticeType = $Enums.NoticeType

export type OrganizationType = $Enums.OrganizationType
export const OrganizationType = $Enums.OrganizationType

export type YearType = $Enums.YearType
export const YearType = $Enums.YearType

export type AssignmentStatus = $Enums.AssignmentStatus
export const AssignmentStatus = $Enums.AssignmentStatus

export type DocumentType = $Enums.DocumentType
export const DocumentType = $Enums.DocumentType

export type PaymentMethod = $Enums.PaymentMethod
export const PaymentMethod = $Enums.PaymentMethod

export type PaymentStatus = $Enums.PaymentStatus
export const PaymentStatus = $Enums.PaymentStatus

export type FeeStatus = $Enums.FeeStatus
export const FeeStatus = $Enums.FeeStatus

export type scheduledJobType = $Enums.scheduledJobType
export const scheduledJobType = $Enums.scheduledJobType

export type AttendanceStatus = $Enums.AttendanceStatus
export const AttendanceStatus = $Enums.AttendanceStatus

export type CalendarEventType = $Enums.CalendarEventType
export const CalendarEventType = $Enums.CalendarEventType

export type Severity = $Enums.Severity
export const Severity = $Enums.Severity

export type ComplaintStatus = $Enums.ComplaintStatus
export const ComplaintStatus = $Enums.ComplaintStatus

export type NotificationType = $Enums.NotificationType
export const NotificationType = $Enums.NotificationType

export type NotificationChannel = $Enums.NotificationChannel
export const NotificationChannel = $Enums.NotificationChannel

export type NotificationStatus = $Enums.NotificationStatus
export const NotificationStatus = $Enums.NotificationStatus

export type Role = $Enums.Role
export const Role = $Enums.Role

export type Gender = $Enums.Gender
export const Gender = $Enums.Gender

export type EmploymentStatus = $Enums.EmploymentStatus
export const EmploymentStatus = $Enums.EmploymentStatus

export type EvaluationType = $Enums.EvaluationType
export const EvaluationType = $Enums.EvaluationType
