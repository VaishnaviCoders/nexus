
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ScheduledJob` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ScheduledJob
 * 
 */
export type ScheduledJobModel = runtime.Types.Result.DefaultSelection<Prisma.$ScheduledJobPayload>

export type AggregateScheduledJob = {
  _count: ScheduledJobCountAggregateOutputType | null
  _min: ScheduledJobMinAggregateOutputType | null
  _max: ScheduledJobMaxAggregateOutputType | null
}

export type ScheduledJobMinAggregateOutputType = {
  id: string | null
  type: $Enums.scheduledJobType | null
  scheduledAt: Date | null
  status: string | null
  error: string | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
  organizationId: string | null
}

export type ScheduledJobMaxAggregateOutputType = {
  id: string | null
  type: $Enums.scheduledJobType | null
  scheduledAt: Date | null
  status: string | null
  error: string | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
  organizationId: string | null
}

export type ScheduledJobCountAggregateOutputType = {
  id: number
  data: number
  type: number
  scheduledAt: number
  channels: number
  status: number
  result: number
  error: number
  createdBy: number
  createdAt: number
  updatedAt: number
  organizationId: number
  _all: number
}


export type ScheduledJobMinAggregateInputType = {
  id?: true
  type?: true
  scheduledAt?: true
  status?: true
  error?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
}

export type ScheduledJobMaxAggregateInputType = {
  id?: true
  type?: true
  scheduledAt?: true
  status?: true
  error?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
}

export type ScheduledJobCountAggregateInputType = {
  id?: true
  data?: true
  type?: true
  scheduledAt?: true
  channels?: true
  status?: true
  result?: true
  error?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
  _all?: true
}

export type ScheduledJobAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ScheduledJob to aggregate.
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledJobs to fetch.
   */
  orderBy?: Prisma.ScheduledJobOrderByWithRelationInput | Prisma.ScheduledJobOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ScheduledJobWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledJobs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledJobs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ScheduledJobs
  **/
  _count?: true | ScheduledJobCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ScheduledJobMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ScheduledJobMaxAggregateInputType
}

export type GetScheduledJobAggregateType<T extends ScheduledJobAggregateArgs> = {
      [P in keyof T & keyof AggregateScheduledJob]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateScheduledJob[P]>
    : Prisma.GetScalarType<T[P], AggregateScheduledJob[P]>
}




export type ScheduledJobGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ScheduledJobWhereInput
  orderBy?: Prisma.ScheduledJobOrderByWithAggregationInput | Prisma.ScheduledJobOrderByWithAggregationInput[]
  by: Prisma.ScheduledJobScalarFieldEnum[] | Prisma.ScheduledJobScalarFieldEnum
  having?: Prisma.ScheduledJobScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ScheduledJobCountAggregateInputType | true
  _min?: ScheduledJobMinAggregateInputType
  _max?: ScheduledJobMaxAggregateInputType
}

export type ScheduledJobGroupByOutputType = {
  id: string
  data: runtime.JsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date
  channels: $Enums.NotificationChannel[]
  status: string
  result: runtime.JsonValue | null
  error: string | null
  createdBy: string | null
  createdAt: Date
  updatedAt: Date
  organizationId: string
  _count: ScheduledJobCountAggregateOutputType | null
  _min: ScheduledJobMinAggregateOutputType | null
  _max: ScheduledJobMaxAggregateOutputType | null
}

type GetScheduledJobGroupByPayload<T extends ScheduledJobGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ScheduledJobGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ScheduledJobGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ScheduledJobGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ScheduledJobGroupByOutputType[P]>
      }
    >
  > 



export type ScheduledJobWhereInput = {
  AND?: Prisma.ScheduledJobWhereInput | Prisma.ScheduledJobWhereInput[]
  OR?: Prisma.ScheduledJobWhereInput[]
  NOT?: Prisma.ScheduledJobWhereInput | Prisma.ScheduledJobWhereInput[]
  id?: Prisma.StringFilter<"ScheduledJob"> | string
  data?: Prisma.JsonFilter<"ScheduledJob">
  type?: Prisma.EnumscheduledJobTypeFilter<"ScheduledJob"> | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  channels?: Prisma.EnumNotificationChannelNullableListFilter<"ScheduledJob">
  status?: Prisma.StringFilter<"ScheduledJob"> | string
  result?: Prisma.JsonNullableFilter<"ScheduledJob">
  error?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdBy?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  organizationId?: Prisma.StringFilter<"ScheduledJob"> | string
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}

export type ScheduledJobOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  type?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  channels?: Prisma.SortOrder
  status?: Prisma.SortOrder
  result?: Prisma.SortOrderInput | Prisma.SortOrder
  error?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  _relevance?: Prisma.ScheduledJobOrderByRelevanceInput
}

export type ScheduledJobWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ScheduledJobWhereInput | Prisma.ScheduledJobWhereInput[]
  OR?: Prisma.ScheduledJobWhereInput[]
  NOT?: Prisma.ScheduledJobWhereInput | Prisma.ScheduledJobWhereInput[]
  data?: Prisma.JsonFilter<"ScheduledJob">
  type?: Prisma.EnumscheduledJobTypeFilter<"ScheduledJob"> | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  channels?: Prisma.EnumNotificationChannelNullableListFilter<"ScheduledJob">
  status?: Prisma.StringFilter<"ScheduledJob"> | string
  result?: Prisma.JsonNullableFilter<"ScheduledJob">
  error?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdBy?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  organizationId?: Prisma.StringFilter<"ScheduledJob"> | string
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}, "id">

export type ScheduledJobOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  type?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  channels?: Prisma.SortOrder
  status?: Prisma.SortOrder
  result?: Prisma.SortOrderInput | Prisma.SortOrder
  error?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  _count?: Prisma.ScheduledJobCountOrderByAggregateInput
  _max?: Prisma.ScheduledJobMaxOrderByAggregateInput
  _min?: Prisma.ScheduledJobMinOrderByAggregateInput
}

export type ScheduledJobScalarWhereWithAggregatesInput = {
  AND?: Prisma.ScheduledJobScalarWhereWithAggregatesInput | Prisma.ScheduledJobScalarWhereWithAggregatesInput[]
  OR?: Prisma.ScheduledJobScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ScheduledJobScalarWhereWithAggregatesInput | Prisma.ScheduledJobScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ScheduledJob"> | string
  data?: Prisma.JsonWithAggregatesFilter<"ScheduledJob">
  type?: Prisma.EnumscheduledJobTypeWithAggregatesFilter<"ScheduledJob"> | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeWithAggregatesFilter<"ScheduledJob"> | Date | string
  channels?: Prisma.EnumNotificationChannelNullableListFilter<"ScheduledJob">
  status?: Prisma.StringWithAggregatesFilter<"ScheduledJob"> | string
  result?: Prisma.JsonNullableWithAggregatesFilter<"ScheduledJob">
  error?: Prisma.StringNullableWithAggregatesFilter<"ScheduledJob"> | string | null
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"ScheduledJob"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ScheduledJob"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ScheduledJob"> | Date | string
  organizationId?: Prisma.StringWithAggregatesFilter<"ScheduledJob"> | string
}

export type ScheduledJobCreateInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutScheduledJobInput
}

export type ScheduledJobUncheckedCreateInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type ScheduledJobUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutScheduledJobNestedInput
}

export type ScheduledJobUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ScheduledJobCreateManyInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type ScheduledJobUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledJobUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ScheduledJobListRelationFilter = {
  every?: Prisma.ScheduledJobWhereInput
  some?: Prisma.ScheduledJobWhereInput
  none?: Prisma.ScheduledJobWhereInput
}

export type ScheduledJobOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EnumNotificationChannelNullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.NotificationChannel[] | Prisma.ListEnumNotificationChannelFieldRefInput<$PrismaModel> | null
  has?: $Enums.NotificationChannel | Prisma.EnumNotificationChannelFieldRefInput<$PrismaModel> | null
  hasEvery?: $Enums.NotificationChannel[] | Prisma.ListEnumNotificationChannelFieldRefInput<$PrismaModel>
  hasSome?: $Enums.NotificationChannel[] | Prisma.ListEnumNotificationChannelFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type ScheduledJobOrderByRelevanceInput = {
  fields: Prisma.ScheduledJobOrderByRelevanceFieldEnum | Prisma.ScheduledJobOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ScheduledJobCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  type?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  channels?: Prisma.SortOrder
  status?: Prisma.SortOrder
  result?: Prisma.SortOrder
  error?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type ScheduledJobMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  status?: Prisma.SortOrder
  error?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type ScheduledJobMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  status?: Prisma.SortOrder
  error?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type ScheduledJobCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput> | Prisma.ScheduledJobCreateWithoutOrganizationInput[] | Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput | Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ScheduledJobCreateManyOrganizationInputEnvelope
  connect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
}

export type ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput> | Prisma.ScheduledJobCreateWithoutOrganizationInput[] | Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput | Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ScheduledJobCreateManyOrganizationInputEnvelope
  connect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
}

export type ScheduledJobUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput> | Prisma.ScheduledJobCreateWithoutOrganizationInput[] | Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput | Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ScheduledJobUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ScheduledJobUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ScheduledJobCreateManyOrganizationInputEnvelope
  set?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  disconnect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  delete?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  connect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  update?: Prisma.ScheduledJobUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ScheduledJobUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ScheduledJobUpdateManyWithWhereWithoutOrganizationInput | Prisma.ScheduledJobUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ScheduledJobScalarWhereInput | Prisma.ScheduledJobScalarWhereInput[]
}

export type ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput> | Prisma.ScheduledJobCreateWithoutOrganizationInput[] | Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput | Prisma.ScheduledJobCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ScheduledJobUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ScheduledJobUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ScheduledJobCreateManyOrganizationInputEnvelope
  set?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  disconnect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  delete?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  connect?: Prisma.ScheduledJobWhereUniqueInput | Prisma.ScheduledJobWhereUniqueInput[]
  update?: Prisma.ScheduledJobUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ScheduledJobUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ScheduledJobUpdateManyWithWhereWithoutOrganizationInput | Prisma.ScheduledJobUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ScheduledJobScalarWhereInput | Prisma.ScheduledJobScalarWhereInput[]
}

export type ScheduledJobCreatechannelsInput = {
  set: $Enums.NotificationChannel[]
}

export type EnumscheduledJobTypeFieldUpdateOperationsInput = {
  set?: $Enums.scheduledJobType
}

export type ScheduledJobUpdatechannelsInput = {
  set?: $Enums.NotificationChannel[]
  push?: $Enums.NotificationChannel | $Enums.NotificationChannel[]
}

export type ScheduledJobCreateWithoutOrganizationInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledJobUncheckedCreateWithoutOrganizationInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledJobCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.ScheduledJobWhereUniqueInput
  create: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput>
}

export type ScheduledJobCreateManyOrganizationInputEnvelope = {
  data: Prisma.ScheduledJobCreateManyOrganizationInput | Prisma.ScheduledJobCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type ScheduledJobUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ScheduledJobWhereUniqueInput
  update: Prisma.XOR<Prisma.ScheduledJobUpdateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.ScheduledJobCreateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedCreateWithoutOrganizationInput>
}

export type ScheduledJobUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ScheduledJobWhereUniqueInput
  data: Prisma.XOR<Prisma.ScheduledJobUpdateWithoutOrganizationInput, Prisma.ScheduledJobUncheckedUpdateWithoutOrganizationInput>
}

export type ScheduledJobUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.ScheduledJobScalarWhereInput
  data: Prisma.XOR<Prisma.ScheduledJobUpdateManyMutationInput, Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationInput>
}

export type ScheduledJobScalarWhereInput = {
  AND?: Prisma.ScheduledJobScalarWhereInput | Prisma.ScheduledJobScalarWhereInput[]
  OR?: Prisma.ScheduledJobScalarWhereInput[]
  NOT?: Prisma.ScheduledJobScalarWhereInput | Prisma.ScheduledJobScalarWhereInput[]
  id?: Prisma.StringFilter<"ScheduledJob"> | string
  data?: Prisma.JsonFilter<"ScheduledJob">
  type?: Prisma.EnumscheduledJobTypeFilter<"ScheduledJob"> | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  channels?: Prisma.EnumNotificationChannelNullableListFilter<"ScheduledJob">
  status?: Prisma.StringFilter<"ScheduledJob"> | string
  result?: Prisma.JsonNullableFilter<"ScheduledJob">
  error?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdBy?: Prisma.StringNullableFilter<"ScheduledJob"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledJob"> | Date | string
  organizationId?: Prisma.StringFilter<"ScheduledJob"> | string
}

export type ScheduledJobCreateManyOrganizationInput = {
  id?: string
  data: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type: $Enums.scheduledJobType
  scheduledAt: Date | string
  channels?: Prisma.ScheduledJobCreatechannelsInput | $Enums.NotificationChannel[]
  status?: string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: string | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledJobUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledJobUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledJobUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  data?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  type?: Prisma.EnumscheduledJobTypeFieldUpdateOperationsInput | $Enums.scheduledJobType
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channels?: Prisma.ScheduledJobUpdatechannelsInput | $Enums.NotificationChannel[]
  status?: Prisma.StringFieldUpdateOperationsInput | string
  result?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ScheduledJobSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  data?: boolean
  type?: boolean
  scheduledAt?: boolean
  channels?: boolean
  status?: boolean
  result?: boolean
  error?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledJob"]>

export type ScheduledJobSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  data?: boolean
  type?: boolean
  scheduledAt?: boolean
  channels?: boolean
  status?: boolean
  result?: boolean
  error?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledJob"]>

export type ScheduledJobSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  data?: boolean
  type?: boolean
  scheduledAt?: boolean
  channels?: boolean
  status?: boolean
  result?: boolean
  error?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledJob"]>

export type ScheduledJobSelectScalar = {
  id?: boolean
  data?: boolean
  type?: boolean
  scheduledAt?: boolean
  channels?: boolean
  status?: boolean
  result?: boolean
  error?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
}

export type ScheduledJobOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "data" | "type" | "scheduledAt" | "channels" | "status" | "result" | "error" | "createdBy" | "createdAt" | "updatedAt" | "organizationId", ExtArgs["result"]["scheduledJob"]>
export type ScheduledJobInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type ScheduledJobIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type ScheduledJobIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}

export type $ScheduledJobPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ScheduledJob"
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    data: runtime.JsonValue
    type: $Enums.scheduledJobType
    scheduledAt: Date
    channels: $Enums.NotificationChannel[]
    status: string
    result: runtime.JsonValue | null
    error: string | null
    createdBy: string | null
    createdAt: Date
    updatedAt: Date
    organizationId: string
  }, ExtArgs["result"]["scheduledJob"]>
  composites: {}
}

export type ScheduledJobGetPayload<S extends boolean | null | undefined | ScheduledJobDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload, S>

export type ScheduledJobCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ScheduledJobFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ScheduledJobCountAggregateInputType | true
  }

export interface ScheduledJobDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ScheduledJob'], meta: { name: 'ScheduledJob' } }
  /**
   * Find zero or one ScheduledJob that matches the filter.
   * @param {ScheduledJobFindUniqueArgs} args - Arguments to find a ScheduledJob
   * @example
   * // Get one ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ScheduledJobFindUniqueArgs>(args: Prisma.SelectSubset<T, ScheduledJobFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ScheduledJob that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ScheduledJobFindUniqueOrThrowArgs} args - Arguments to find a ScheduledJob
   * @example
   * // Get one ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ScheduledJobFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ScheduledJobFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ScheduledJob that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobFindFirstArgs} args - Arguments to find a ScheduledJob
   * @example
   * // Get one ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ScheduledJobFindFirstArgs>(args?: Prisma.SelectSubset<T, ScheduledJobFindFirstArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ScheduledJob that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobFindFirstOrThrowArgs} args - Arguments to find a ScheduledJob
   * @example
   * // Get one ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ScheduledJobFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ScheduledJobFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ScheduledJobs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ScheduledJobs
   * const scheduledJobs = await prisma.scheduledJob.findMany()
   * 
   * // Get first 10 ScheduledJobs
   * const scheduledJobs = await prisma.scheduledJob.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const scheduledJobWithIdOnly = await prisma.scheduledJob.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ScheduledJobFindManyArgs>(args?: Prisma.SelectSubset<T, ScheduledJobFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ScheduledJob.
   * @param {ScheduledJobCreateArgs} args - Arguments to create a ScheduledJob.
   * @example
   * // Create one ScheduledJob
   * const ScheduledJob = await prisma.scheduledJob.create({
   *   data: {
   *     // ... data to create a ScheduledJob
   *   }
   * })
   * 
   */
  create<T extends ScheduledJobCreateArgs>(args: Prisma.SelectSubset<T, ScheduledJobCreateArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ScheduledJobs.
   * @param {ScheduledJobCreateManyArgs} args - Arguments to create many ScheduledJobs.
   * @example
   * // Create many ScheduledJobs
   * const scheduledJob = await prisma.scheduledJob.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ScheduledJobCreateManyArgs>(args?: Prisma.SelectSubset<T, ScheduledJobCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ScheduledJobs and returns the data saved in the database.
   * @param {ScheduledJobCreateManyAndReturnArgs} args - Arguments to create many ScheduledJobs.
   * @example
   * // Create many ScheduledJobs
   * const scheduledJob = await prisma.scheduledJob.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ScheduledJobs and only return the `id`
   * const scheduledJobWithIdOnly = await prisma.scheduledJob.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ScheduledJobCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ScheduledJobCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ScheduledJob.
   * @param {ScheduledJobDeleteArgs} args - Arguments to delete one ScheduledJob.
   * @example
   * // Delete one ScheduledJob
   * const ScheduledJob = await prisma.scheduledJob.delete({
   *   where: {
   *     // ... filter to delete one ScheduledJob
   *   }
   * })
   * 
   */
  delete<T extends ScheduledJobDeleteArgs>(args: Prisma.SelectSubset<T, ScheduledJobDeleteArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ScheduledJob.
   * @param {ScheduledJobUpdateArgs} args - Arguments to update one ScheduledJob.
   * @example
   * // Update one ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ScheduledJobUpdateArgs>(args: Prisma.SelectSubset<T, ScheduledJobUpdateArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ScheduledJobs.
   * @param {ScheduledJobDeleteManyArgs} args - Arguments to filter ScheduledJobs to delete.
   * @example
   * // Delete a few ScheduledJobs
   * const { count } = await prisma.scheduledJob.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ScheduledJobDeleteManyArgs>(args?: Prisma.SelectSubset<T, ScheduledJobDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ScheduledJobs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ScheduledJobs
   * const scheduledJob = await prisma.scheduledJob.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ScheduledJobUpdateManyArgs>(args: Prisma.SelectSubset<T, ScheduledJobUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ScheduledJobs and returns the data updated in the database.
   * @param {ScheduledJobUpdateManyAndReturnArgs} args - Arguments to update many ScheduledJobs.
   * @example
   * // Update many ScheduledJobs
   * const scheduledJob = await prisma.scheduledJob.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ScheduledJobs and only return the `id`
   * const scheduledJobWithIdOnly = await prisma.scheduledJob.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ScheduledJobUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ScheduledJobUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ScheduledJob.
   * @param {ScheduledJobUpsertArgs} args - Arguments to update or create a ScheduledJob.
   * @example
   * // Update or create a ScheduledJob
   * const scheduledJob = await prisma.scheduledJob.upsert({
   *   create: {
   *     // ... data to create a ScheduledJob
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ScheduledJob we want to update
   *   }
   * })
   */
  upsert<T extends ScheduledJobUpsertArgs>(args: Prisma.SelectSubset<T, ScheduledJobUpsertArgs<ExtArgs>>): Prisma.Prisma__ScheduledJobClient<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ScheduledJobs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobCountArgs} args - Arguments to filter ScheduledJobs to count.
   * @example
   * // Count the number of ScheduledJobs
   * const count = await prisma.scheduledJob.count({
   *   where: {
   *     // ... the filter for the ScheduledJobs we want to count
   *   }
   * })
  **/
  count<T extends ScheduledJobCountArgs>(
    args?: Prisma.Subset<T, ScheduledJobCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ScheduledJobCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ScheduledJob.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ScheduledJobAggregateArgs>(args: Prisma.Subset<T, ScheduledJobAggregateArgs>): Prisma.PrismaPromise<GetScheduledJobAggregateType<T>>

  /**
   * Group by ScheduledJob.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledJobGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ScheduledJobGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ScheduledJobGroupByArgs['orderBy'] }
      : { orderBy?: ScheduledJobGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ScheduledJobGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScheduledJobGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ScheduledJob model
 */
readonly fields: ScheduledJobFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ScheduledJob.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ScheduledJobClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ScheduledJob model
 */
export interface ScheduledJobFieldRefs {
  readonly id: Prisma.FieldRef<"ScheduledJob", 'String'>
  readonly data: Prisma.FieldRef<"ScheduledJob", 'Json'>
  readonly type: Prisma.FieldRef<"ScheduledJob", 'scheduledJobType'>
  readonly scheduledAt: Prisma.FieldRef<"ScheduledJob", 'DateTime'>
  readonly channels: Prisma.FieldRef<"ScheduledJob", 'NotificationChannel[]'>
  readonly status: Prisma.FieldRef<"ScheduledJob", 'String'>
  readonly result: Prisma.FieldRef<"ScheduledJob", 'Json'>
  readonly error: Prisma.FieldRef<"ScheduledJob", 'String'>
  readonly createdBy: Prisma.FieldRef<"ScheduledJob", 'String'>
  readonly createdAt: Prisma.FieldRef<"ScheduledJob", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ScheduledJob", 'DateTime'>
  readonly organizationId: Prisma.FieldRef<"ScheduledJob", 'String'>
}
    

// Custom InputTypes
/**
 * ScheduledJob findUnique
 */
export type ScheduledJobFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledJob to fetch.
   */
  where: Prisma.ScheduledJobWhereUniqueInput
}

/**
 * ScheduledJob findUniqueOrThrow
 */
export type ScheduledJobFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledJob to fetch.
   */
  where: Prisma.ScheduledJobWhereUniqueInput
}

/**
 * ScheduledJob findFirst
 */
export type ScheduledJobFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledJob to fetch.
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledJobs to fetch.
   */
  orderBy?: Prisma.ScheduledJobOrderByWithRelationInput | Prisma.ScheduledJobOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ScheduledJobs.
   */
  cursor?: Prisma.ScheduledJobWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledJobs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledJobs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ScheduledJobs.
   */
  distinct?: Prisma.ScheduledJobScalarFieldEnum | Prisma.ScheduledJobScalarFieldEnum[]
}

/**
 * ScheduledJob findFirstOrThrow
 */
export type ScheduledJobFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledJob to fetch.
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledJobs to fetch.
   */
  orderBy?: Prisma.ScheduledJobOrderByWithRelationInput | Prisma.ScheduledJobOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ScheduledJobs.
   */
  cursor?: Prisma.ScheduledJobWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledJobs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledJobs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ScheduledJobs.
   */
  distinct?: Prisma.ScheduledJobScalarFieldEnum | Prisma.ScheduledJobScalarFieldEnum[]
}

/**
 * ScheduledJob findMany
 */
export type ScheduledJobFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledJobs to fetch.
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledJobs to fetch.
   */
  orderBy?: Prisma.ScheduledJobOrderByWithRelationInput | Prisma.ScheduledJobOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ScheduledJobs.
   */
  cursor?: Prisma.ScheduledJobWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledJobs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledJobs.
   */
  skip?: number
  distinct?: Prisma.ScheduledJobScalarFieldEnum | Prisma.ScheduledJobScalarFieldEnum[]
}

/**
 * ScheduledJob create
 */
export type ScheduledJobCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * The data needed to create a ScheduledJob.
   */
  data: Prisma.XOR<Prisma.ScheduledJobCreateInput, Prisma.ScheduledJobUncheckedCreateInput>
}

/**
 * ScheduledJob createMany
 */
export type ScheduledJobCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ScheduledJobs.
   */
  data: Prisma.ScheduledJobCreateManyInput | Prisma.ScheduledJobCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ScheduledJob createManyAndReturn
 */
export type ScheduledJobCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * The data used to create many ScheduledJobs.
   */
  data: Prisma.ScheduledJobCreateManyInput | Prisma.ScheduledJobCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ScheduledJob update
 */
export type ScheduledJobUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * The data needed to update a ScheduledJob.
   */
  data: Prisma.XOR<Prisma.ScheduledJobUpdateInput, Prisma.ScheduledJobUncheckedUpdateInput>
  /**
   * Choose, which ScheduledJob to update.
   */
  where: Prisma.ScheduledJobWhereUniqueInput
}

/**
 * ScheduledJob updateMany
 */
export type ScheduledJobUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ScheduledJobs.
   */
  data: Prisma.XOR<Prisma.ScheduledJobUpdateManyMutationInput, Prisma.ScheduledJobUncheckedUpdateManyInput>
  /**
   * Filter which ScheduledJobs to update
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * Limit how many ScheduledJobs to update.
   */
  limit?: number
}

/**
 * ScheduledJob updateManyAndReturn
 */
export type ScheduledJobUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * The data used to update ScheduledJobs.
   */
  data: Prisma.XOR<Prisma.ScheduledJobUpdateManyMutationInput, Prisma.ScheduledJobUncheckedUpdateManyInput>
  /**
   * Filter which ScheduledJobs to update
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * Limit how many ScheduledJobs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ScheduledJob upsert
 */
export type ScheduledJobUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * The filter to search for the ScheduledJob to update in case it exists.
   */
  where: Prisma.ScheduledJobWhereUniqueInput
  /**
   * In case the ScheduledJob found by the `where` argument doesn't exist, create a new ScheduledJob with this data.
   */
  create: Prisma.XOR<Prisma.ScheduledJobCreateInput, Prisma.ScheduledJobUncheckedCreateInput>
  /**
   * In case the ScheduledJob was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ScheduledJobUpdateInput, Prisma.ScheduledJobUncheckedUpdateInput>
}

/**
 * ScheduledJob delete
 */
export type ScheduledJobDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  /**
   * Filter which ScheduledJob to delete.
   */
  where: Prisma.ScheduledJobWhereUniqueInput
}

/**
 * ScheduledJob deleteMany
 */
export type ScheduledJobDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ScheduledJobs to delete
   */
  where?: Prisma.ScheduledJobWhereInput
  /**
   * Limit how many ScheduledJobs to delete.
   */
  limit?: number
}

/**
 * ScheduledJob without action
 */
export type ScheduledJobDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
}
