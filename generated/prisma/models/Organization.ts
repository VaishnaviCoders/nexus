
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Organization` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Organization
 * 
 */
export type OrganizationModel = runtime.Types.Result.DefaultSelection<Prisma.$OrganizationPayload>

export type AggregateOrganization = {
  _count: OrganizationCountAggregateOutputType | null
  _avg: OrganizationAvgAggregateOutputType | null
  _sum: OrganizationSumAggregateOutputType | null
  _min: OrganizationMinAggregateOutputType | null
  _max: OrganizationMaxAggregateOutputType | null
}

export type OrganizationAvgAggregateOutputType = {
  maxStudents: number | null
}

export type OrganizationSumAggregateOutputType = {
  maxStudents: number | null
}

export type OrganizationMinAggregateOutputType = {
  id: string | null
  name: string | null
  organizationSlug: string | null
  organizationLogo: string | null
  contactEmail: string | null
  contactPhone: string | null
  website: string | null
  isActive: boolean | null
  isPaid: boolean | null
  plan: $Enums.PlanType | null
  planStartedAt: Date | null
  planExpiresAt: Date | null
  maxStudents: number | null
  organizationType: $Enums.OrganizationType | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationMaxAggregateOutputType = {
  id: string | null
  name: string | null
  organizationSlug: string | null
  organizationLogo: string | null
  contactEmail: string | null
  contactPhone: string | null
  website: string | null
  isActive: boolean | null
  isPaid: boolean | null
  plan: $Enums.PlanType | null
  planStartedAt: Date | null
  planExpiresAt: Date | null
  maxStudents: number | null
  organizationType: $Enums.OrganizationType | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationCountAggregateOutputType = {
  id: number
  name: number
  organizationSlug: number
  organizationLogo: number
  contactEmail: number
  contactPhone: number
  website: number
  isActive: number
  isPaid: number
  plan: number
  planStartedAt: number
  planExpiresAt: number
  maxStudents: number
  organizationType: number
  createdBy: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type OrganizationAvgAggregateInputType = {
  maxStudents?: true
}

export type OrganizationSumAggregateInputType = {
  maxStudents?: true
}

export type OrganizationMinAggregateInputType = {
  id?: true
  name?: true
  organizationSlug?: true
  organizationLogo?: true
  contactEmail?: true
  contactPhone?: true
  website?: true
  isActive?: true
  isPaid?: true
  plan?: true
  planStartedAt?: true
  planExpiresAt?: true
  maxStudents?: true
  organizationType?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationMaxAggregateInputType = {
  id?: true
  name?: true
  organizationSlug?: true
  organizationLogo?: true
  contactEmail?: true
  contactPhone?: true
  website?: true
  isActive?: true
  isPaid?: true
  plan?: true
  planStartedAt?: true
  planExpiresAt?: true
  maxStudents?: true
  organizationType?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationCountAggregateInputType = {
  id?: true
  name?: true
  organizationSlug?: true
  organizationLogo?: true
  contactEmail?: true
  contactPhone?: true
  website?: true
  isActive?: true
  isPaid?: true
  plan?: true
  planStartedAt?: true
  planExpiresAt?: true
  maxStudents?: true
  organizationType?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type OrganizationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Organization to aggregate.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Organizations to fetch.
   */
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Organizations
  **/
  _count?: true | OrganizationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: OrganizationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: OrganizationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OrganizationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OrganizationMaxAggregateInputType
}

export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> = {
      [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrganization[P]>
    : Prisma.GetScalarType<T[P], AggregateOrganization[P]>
}




export type OrganizationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrganizationWhereInput
  orderBy?: Prisma.OrganizationOrderByWithAggregationInput | Prisma.OrganizationOrderByWithAggregationInput[]
  by: Prisma.OrganizationScalarFieldEnum[] | Prisma.OrganizationScalarFieldEnum
  having?: Prisma.OrganizationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrganizationCountAggregateInputType | true
  _avg?: OrganizationAvgAggregateInputType
  _sum?: OrganizationSumAggregateInputType
  _min?: OrganizationMinAggregateInputType
  _max?: OrganizationMaxAggregateInputType
}

export type OrganizationGroupByOutputType = {
  id: string
  name: string | null
  organizationSlug: string
  organizationLogo: string | null
  contactEmail: string | null
  contactPhone: string | null
  website: string | null
  isActive: boolean
  isPaid: boolean
  plan: $Enums.PlanType
  planStartedAt: Date | null
  planExpiresAt: Date | null
  maxStudents: number | null
  organizationType: $Enums.OrganizationType | null
  createdBy: string | null
  createdAt: Date
  updatedAt: Date
  _count: OrganizationCountAggregateOutputType | null
  _avg: OrganizationAvgAggregateOutputType | null
  _sum: OrganizationSumAggregateOutputType | null
  _min: OrganizationMinAggregateOutputType | null
  _max: OrganizationMaxAggregateOutputType | null
}

type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrganizationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OrganizationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrganizationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrganizationGroupByOutputType[P]>
      }
    >
  >



export type OrganizationWhereInput = {
  AND?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  OR?: Prisma.OrganizationWhereInput[]
  NOT?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  id?: Prisma.StringFilter<"Organization"> | string
  name?: Prisma.StringNullableFilter<"Organization"> | string | null
  organizationSlug?: Prisma.StringFilter<"Organization"> | string
  organizationLogo?: Prisma.StringNullableFilter<"Organization"> | string | null
  contactEmail?: Prisma.StringNullableFilter<"Organization"> | string | null
  contactPhone?: Prisma.StringNullableFilter<"Organization"> | string | null
  website?: Prisma.StringNullableFilter<"Organization"> | string | null
  isActive?: Prisma.BoolFilter<"Organization"> | boolean
  isPaid?: Prisma.BoolFilter<"Organization"> | boolean
  plan?: Prisma.EnumPlanTypeFilter<"Organization"> | $Enums.PlanType
  planStartedAt?: Prisma.DateTimeNullableFilter<"Organization"> | Date | string | null
  planExpiresAt?: Prisma.DateTimeNullableFilter<"Organization"> | Date | string | null
  maxStudents?: Prisma.IntNullableFilter<"Organization"> | number | null
  organizationType?: Prisma.EnumOrganizationTypeNullableFilter<"Organization"> | $Enums.OrganizationType | null
  createdBy?: Prisma.StringNullableFilter<"Organization"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Organization"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Organization"> | Date | string
  users?: Prisma.UserListRelationFilter
  notices?: Prisma.NoticeListRelationFilter
  Student?: Prisma.StudentListRelationFilter
  StudentDocument?: Prisma.StudentDocumentListRelationFilter
  Grade?: Prisma.GradeListRelationFilter
  Section?: Prisma.SectionListRelationFilter
  Fee?: Prisma.FeeListRelationFilter
  FeeCategory?: Prisma.FeeCategoryListRelationFilter
  FeePayment?: Prisma.FeePaymentListRelationFilter
  AcademicCalendar?: Prisma.AcademicCalendarListRelationFilter
  AnonymousComplaint?: Prisma.AnonymousComplaintListRelationFilter
  Teacher?: Prisma.TeacherListRelationFilter
  Subject?: Prisma.SubjectListRelationFilter
  TeachingAssignment?: Prisma.TeachingAssignmentListRelationFilter
  NotificationLog?: Prisma.NotificationLogListRelationFilter
  AcademicYear?: Prisma.AcademicYearListRelationFilter
  scheduledJob?: Prisma.ScheduledJobListRelationFilter
  leaves?: Prisma.LeaveListRelationFilter
  exam?: Prisma.ExamListRelationFilter
  hallTicket?: Prisma.HallTicketListRelationFilter
}

export type OrganizationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationSlug?: Prisma.SortOrder
  organizationLogo?: Prisma.SortOrderInput | Prisma.SortOrder
  contactEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  contactPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  plan?: Prisma.SortOrder
  planStartedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  planExpiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  maxStudents?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationType?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  users?: Prisma.UserOrderByRelationAggregateInput
  notices?: Prisma.NoticeOrderByRelationAggregateInput
  Student?: Prisma.StudentOrderByRelationAggregateInput
  StudentDocument?: Prisma.StudentDocumentOrderByRelationAggregateInput
  Grade?: Prisma.GradeOrderByRelationAggregateInput
  Section?: Prisma.SectionOrderByRelationAggregateInput
  Fee?: Prisma.FeeOrderByRelationAggregateInput
  FeeCategory?: Prisma.FeeCategoryOrderByRelationAggregateInput
  FeePayment?: Prisma.FeePaymentOrderByRelationAggregateInput
  AcademicCalendar?: Prisma.AcademicCalendarOrderByRelationAggregateInput
  AnonymousComplaint?: Prisma.AnonymousComplaintOrderByRelationAggregateInput
  Teacher?: Prisma.TeacherOrderByRelationAggregateInput
  Subject?: Prisma.SubjectOrderByRelationAggregateInput
  TeachingAssignment?: Prisma.TeachingAssignmentOrderByRelationAggregateInput
  NotificationLog?: Prisma.NotificationLogOrderByRelationAggregateInput
  AcademicYear?: Prisma.AcademicYearOrderByRelationAggregateInput
  scheduledJob?: Prisma.ScheduledJobOrderByRelationAggregateInput
  leaves?: Prisma.LeaveOrderByRelationAggregateInput
  exam?: Prisma.ExamOrderByRelationAggregateInput
  hallTicket?: Prisma.HallTicketOrderByRelationAggregateInput
  _relevance?: Prisma.OrganizationOrderByRelevanceInput
}

export type OrganizationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  organizationSlug?: string
  AND?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  OR?: Prisma.OrganizationWhereInput[]
  NOT?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  name?: Prisma.StringNullableFilter<"Organization"> | string | null
  organizationLogo?: Prisma.StringNullableFilter<"Organization"> | string | null
  contactEmail?: Prisma.StringNullableFilter<"Organization"> | string | null
  contactPhone?: Prisma.StringNullableFilter<"Organization"> | string | null
  website?: Prisma.StringNullableFilter<"Organization"> | string | null
  isActive?: Prisma.BoolFilter<"Organization"> | boolean
  isPaid?: Prisma.BoolFilter<"Organization"> | boolean
  plan?: Prisma.EnumPlanTypeFilter<"Organization"> | $Enums.PlanType
  planStartedAt?: Prisma.DateTimeNullableFilter<"Organization"> | Date | string | null
  planExpiresAt?: Prisma.DateTimeNullableFilter<"Organization"> | Date | string | null
  maxStudents?: Prisma.IntNullableFilter<"Organization"> | number | null
  organizationType?: Prisma.EnumOrganizationTypeNullableFilter<"Organization"> | $Enums.OrganizationType | null
  createdBy?: Prisma.StringNullableFilter<"Organization"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Organization"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Organization"> | Date | string
  users?: Prisma.UserListRelationFilter
  notices?: Prisma.NoticeListRelationFilter
  Student?: Prisma.StudentListRelationFilter
  StudentDocument?: Prisma.StudentDocumentListRelationFilter
  Grade?: Prisma.GradeListRelationFilter
  Section?: Prisma.SectionListRelationFilter
  Fee?: Prisma.FeeListRelationFilter
  FeeCategory?: Prisma.FeeCategoryListRelationFilter
  FeePayment?: Prisma.FeePaymentListRelationFilter
  AcademicCalendar?: Prisma.AcademicCalendarListRelationFilter
  AnonymousComplaint?: Prisma.AnonymousComplaintListRelationFilter
  Teacher?: Prisma.TeacherListRelationFilter
  Subject?: Prisma.SubjectListRelationFilter
  TeachingAssignment?: Prisma.TeachingAssignmentListRelationFilter
  NotificationLog?: Prisma.NotificationLogListRelationFilter
  AcademicYear?: Prisma.AcademicYearListRelationFilter
  scheduledJob?: Prisma.ScheduledJobListRelationFilter
  leaves?: Prisma.LeaveListRelationFilter
  exam?: Prisma.ExamListRelationFilter
  hallTicket?: Prisma.HallTicketListRelationFilter
}, "id" | "organizationSlug">

export type OrganizationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationSlug?: Prisma.SortOrder
  organizationLogo?: Prisma.SortOrderInput | Prisma.SortOrder
  contactEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  contactPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  plan?: Prisma.SortOrder
  planStartedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  planExpiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  maxStudents?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationType?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.OrganizationCountOrderByAggregateInput
  _avg?: Prisma.OrganizationAvgOrderByAggregateInput
  _max?: Prisma.OrganizationMaxOrderByAggregateInput
  _min?: Prisma.OrganizationMinOrderByAggregateInput
  _sum?: Prisma.OrganizationSumOrderByAggregateInput
}

export type OrganizationScalarWhereWithAggregatesInput = {
  AND?: Prisma.OrganizationScalarWhereWithAggregatesInput | Prisma.OrganizationScalarWhereWithAggregatesInput[]
  OR?: Prisma.OrganizationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OrganizationScalarWhereWithAggregatesInput | Prisma.OrganizationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Organization"> | string
  name?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  organizationSlug?: Prisma.StringWithAggregatesFilter<"Organization"> | string
  organizationLogo?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  contactEmail?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  contactPhone?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  website?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  isActive?: Prisma.BoolWithAggregatesFilter<"Organization"> | boolean
  isPaid?: Prisma.BoolWithAggregatesFilter<"Organization"> | boolean
  plan?: Prisma.EnumPlanTypeWithAggregatesFilter<"Organization"> | $Enums.PlanType
  planStartedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Organization"> | Date | string | null
  planExpiresAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Organization"> | Date | string | null
  maxStudents?: Prisma.IntNullableWithAggregatesFilter<"Organization"> | number | null
  organizationType?: Prisma.EnumOrganizationTypeNullableWithAggregatesFilter<"Organization"> | $Enums.OrganizationType | null
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"Organization"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Organization"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Organization"> | Date | string
}

export type OrganizationCreateInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateManyInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationScalarRelationFilter = {
  is?: Prisma.OrganizationWhereInput
  isNot?: Prisma.OrganizationWhereInput
}

export type OrganizationOrderByRelevanceInput = {
  fields: Prisma.OrganizationOrderByRelevanceFieldEnum | Prisma.OrganizationOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type OrganizationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  organizationSlug?: Prisma.SortOrder
  organizationLogo?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  website?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  plan?: Prisma.SortOrder
  planStartedAt?: Prisma.SortOrder
  planExpiresAt?: Prisma.SortOrder
  maxStudents?: Prisma.SortOrder
  organizationType?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationAvgOrderByAggregateInput = {
  maxStudents?: Prisma.SortOrder
}

export type OrganizationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  organizationSlug?: Prisma.SortOrder
  organizationLogo?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  website?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  plan?: Prisma.SortOrder
  planStartedAt?: Prisma.SortOrder
  planExpiresAt?: Prisma.SortOrder
  maxStudents?: Prisma.SortOrder
  organizationType?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  organizationSlug?: Prisma.SortOrder
  organizationLogo?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  website?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  plan?: Prisma.SortOrder
  planStartedAt?: Prisma.SortOrder
  planExpiresAt?: Prisma.SortOrder
  maxStudents?: Prisma.SortOrder
  organizationType?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationSumOrderByAggregateInput = {
  maxStudents?: Prisma.SortOrder
}

export type OrganizationNullableScalarRelationFilter = {
  is?: Prisma.OrganizationWhereInput | null
  isNot?: Prisma.OrganizationWhereInput | null
}

export type OrganizationCreateNestedOneWithoutAcademicYearInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicYearInput, Prisma.OrganizationUncheckedCreateWithoutAcademicYearInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAcademicYearInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutAcademicYearNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicYearInput, Prisma.OrganizationUncheckedCreateWithoutAcademicYearInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAcademicYearInput
  upsert?: Prisma.OrganizationUpsertWithoutAcademicYearInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutAcademicYearInput, Prisma.OrganizationUpdateWithoutAcademicYearInput>, Prisma.OrganizationUncheckedUpdateWithoutAcademicYearInput>
}

export type EnumPlanTypeFieldUpdateOperationsInput = {
  set?: $Enums.PlanType
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableEnumOrganizationTypeFieldUpdateOperationsInput = {
  set?: $Enums.OrganizationType | null
}

export type OrganizationCreateNestedOneWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutUsersInput, Prisma.OrganizationUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutUsersInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutUsersInput, Prisma.OrganizationUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutUsersInput
  upsert?: Prisma.OrganizationUpsertWithoutUsersInput
  disconnect?: Prisma.OrganizationWhereInput | boolean
  delete?: Prisma.OrganizationWhereInput | boolean
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutUsersInput, Prisma.OrganizationUpdateWithoutUsersInput>, Prisma.OrganizationUncheckedUpdateWithoutUsersInput>
}

export type OrganizationCreateNestedOneWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentInput, Prisma.OrganizationUncheckedCreateWithoutStudentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutStudentInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentInput, Prisma.OrganizationUncheckedCreateWithoutStudentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutStudentInput
  upsert?: Prisma.OrganizationUpsertWithoutStudentInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutStudentInput, Prisma.OrganizationUpdateWithoutStudentInput>, Prisma.OrganizationUncheckedUpdateWithoutStudentInput>
}

export type OrganizationCreateNestedOneWithoutTeacherInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutTeacherInput, Prisma.OrganizationUncheckedCreateWithoutTeacherInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeacherInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutTeacherNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutTeacherInput, Prisma.OrganizationUncheckedCreateWithoutTeacherInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeacherInput
  upsert?: Prisma.OrganizationUpsertWithoutTeacherInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutTeacherInput, Prisma.OrganizationUpdateWithoutTeacherInput>, Prisma.OrganizationUncheckedUpdateWithoutTeacherInput>
}

export type OrganizationCreateNestedOneWithoutGradeInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutGradeInput, Prisma.OrganizationUncheckedCreateWithoutGradeInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutGradeInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutGradeNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutGradeInput, Prisma.OrganizationUncheckedCreateWithoutGradeInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutGradeInput
  upsert?: Prisma.OrganizationUpsertWithoutGradeInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutGradeInput, Prisma.OrganizationUpdateWithoutGradeInput>, Prisma.OrganizationUncheckedUpdateWithoutGradeInput>
}

export type OrganizationCreateNestedOneWithoutSectionInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutSectionInput, Prisma.OrganizationUncheckedCreateWithoutSectionInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutSectionInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutSectionNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutSectionInput, Prisma.OrganizationUncheckedCreateWithoutSectionInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutSectionInput
  upsert?: Prisma.OrganizationUpsertWithoutSectionInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutSectionInput, Prisma.OrganizationUpdateWithoutSectionInput>, Prisma.OrganizationUncheckedUpdateWithoutSectionInput>
}

export type OrganizationCreateNestedOneWithoutSubjectInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutSubjectInput, Prisma.OrganizationUncheckedCreateWithoutSubjectInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutSubjectInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutSubjectNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutSubjectInput, Prisma.OrganizationUncheckedCreateWithoutSubjectInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutSubjectInput
  upsert?: Prisma.OrganizationUpsertWithoutSubjectInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutSubjectInput, Prisma.OrganizationUpdateWithoutSubjectInput>, Prisma.OrganizationUncheckedUpdateWithoutSubjectInput>
}

export type OrganizationCreateNestedOneWithoutTeachingAssignmentInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedCreateWithoutTeachingAssignmentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeachingAssignmentInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutTeachingAssignmentNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedCreateWithoutTeachingAssignmentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeachingAssignmentInput
  upsert?: Prisma.OrganizationUpsertWithoutTeachingAssignmentInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutTeachingAssignmentInput, Prisma.OrganizationUpdateWithoutTeachingAssignmentInput>, Prisma.OrganizationUncheckedUpdateWithoutTeachingAssignmentInput>
}

export type OrganizationCreateNestedOneWithoutStudentDocumentInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedCreateWithoutStudentDocumentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutStudentDocumentInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneWithoutStudentDocumentNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedCreateWithoutStudentDocumentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutStudentDocumentInput
  upsert?: Prisma.OrganizationUpsertWithoutStudentDocumentInput
  disconnect?: Prisma.OrganizationWhereInput | boolean
  delete?: Prisma.OrganizationWhereInput | boolean
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutStudentDocumentInput, Prisma.OrganizationUpdateWithoutStudentDocumentInput>, Prisma.OrganizationUncheckedUpdateWithoutStudentDocumentInput>
}

export type OrganizationCreateNestedOneWithoutFeeInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeInput, Prisma.OrganizationUncheckedCreateWithoutFeeInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeeInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutFeeNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeInput, Prisma.OrganizationUncheckedCreateWithoutFeeInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeeInput
  upsert?: Prisma.OrganizationUpsertWithoutFeeInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutFeeInput, Prisma.OrganizationUpdateWithoutFeeInput>, Prisma.OrganizationUncheckedUpdateWithoutFeeInput>
}

export type OrganizationCreateNestedOneWithoutFeePaymentInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeePaymentInput, Prisma.OrganizationUncheckedCreateWithoutFeePaymentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeePaymentInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutFeePaymentNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeePaymentInput, Prisma.OrganizationUncheckedCreateWithoutFeePaymentInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeePaymentInput
  upsert?: Prisma.OrganizationUpsertWithoutFeePaymentInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutFeePaymentInput, Prisma.OrganizationUpdateWithoutFeePaymentInput>, Prisma.OrganizationUncheckedUpdateWithoutFeePaymentInput>
}

export type OrganizationCreateNestedOneWithoutFeeCategoryInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedCreateWithoutFeeCategoryInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeeCategoryInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutFeeCategoryNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedCreateWithoutFeeCategoryInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFeeCategoryInput
  upsert?: Prisma.OrganizationUpsertWithoutFeeCategoryInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutFeeCategoryInput, Prisma.OrganizationUpdateWithoutFeeCategoryInput>, Prisma.OrganizationUncheckedUpdateWithoutFeeCategoryInput>
}

export type OrganizationCreateNestedOneWithoutAcademicCalendarInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedCreateWithoutAcademicCalendarInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAcademicCalendarInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutAcademicCalendarNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedCreateWithoutAcademicCalendarInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAcademicCalendarInput
  upsert?: Prisma.OrganizationUpsertWithoutAcademicCalendarInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutAcademicCalendarInput, Prisma.OrganizationUpdateWithoutAcademicCalendarInput>, Prisma.OrganizationUncheckedUpdateWithoutAcademicCalendarInput>
}

export type OrganizationCreateNestedOneWithoutAnonymousComplaintInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedCreateWithoutAnonymousComplaintInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAnonymousComplaintInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutAnonymousComplaintNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedCreateWithoutAnonymousComplaintInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutAnonymousComplaintInput
  upsert?: Prisma.OrganizationUpsertWithoutAnonymousComplaintInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutAnonymousComplaintInput, Prisma.OrganizationUpdateWithoutAnonymousComplaintInput>, Prisma.OrganizationUncheckedUpdateWithoutAnonymousComplaintInput>
}

export type OrganizationCreateNestedOneWithoutNoticesInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutNoticesInput, Prisma.OrganizationUncheckedCreateWithoutNoticesInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNoticesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutNoticesNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutNoticesInput, Prisma.OrganizationUncheckedCreateWithoutNoticesInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNoticesInput
  upsert?: Prisma.OrganizationUpsertWithoutNoticesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutNoticesInput, Prisma.OrganizationUpdateWithoutNoticesInput>, Prisma.OrganizationUncheckedUpdateWithoutNoticesInput>
}

export type OrganizationCreateNestedOneWithoutNotificationLogInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutNotificationLogInput, Prisma.OrganizationUncheckedCreateWithoutNotificationLogInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotificationLogInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutNotificationLogNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutNotificationLogInput, Prisma.OrganizationUncheckedCreateWithoutNotificationLogInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotificationLogInput
  upsert?: Prisma.OrganizationUpsertWithoutNotificationLogInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutNotificationLogInput, Prisma.OrganizationUpdateWithoutNotificationLogInput>, Prisma.OrganizationUncheckedUpdateWithoutNotificationLogInput>
}

export type OrganizationCreateNestedOneWithoutScheduledJobInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutScheduledJobInput, Prisma.OrganizationUncheckedCreateWithoutScheduledJobInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutScheduledJobInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutScheduledJobNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutScheduledJobInput, Prisma.OrganizationUncheckedCreateWithoutScheduledJobInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutScheduledJobInput
  upsert?: Prisma.OrganizationUpsertWithoutScheduledJobInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutScheduledJobInput, Prisma.OrganizationUpdateWithoutScheduledJobInput>, Prisma.OrganizationUncheckedUpdateWithoutScheduledJobInput>
}

export type OrganizationCreateNestedOneWithoutExamInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutExamInput, Prisma.OrganizationUncheckedCreateWithoutExamInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutExamInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutExamNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutExamInput, Prisma.OrganizationUncheckedCreateWithoutExamInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutExamInput
  upsert?: Prisma.OrganizationUpsertWithoutExamInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutExamInput, Prisma.OrganizationUpdateWithoutExamInput>, Prisma.OrganizationUncheckedUpdateWithoutExamInput>
}

export type OrganizationCreateNestedOneWithoutHallTicketInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutHallTicketInput, Prisma.OrganizationUncheckedCreateWithoutHallTicketInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutHallTicketInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutHallTicketNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutHallTicketInput, Prisma.OrganizationUncheckedCreateWithoutHallTicketInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutHallTicketInput
  upsert?: Prisma.OrganizationUpsertWithoutHallTicketInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutHallTicketInput, Prisma.OrganizationUpdateWithoutHallTicketInput>, Prisma.OrganizationUncheckedUpdateWithoutHallTicketInput>
}

export type OrganizationCreateNestedOneWithoutLeavesInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutLeavesInput, Prisma.OrganizationUncheckedCreateWithoutLeavesInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutLeavesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutLeavesNestedInput = {
  create?: Prisma.XOR<Prisma.OrganizationCreateWithoutLeavesInput, Prisma.OrganizationUncheckedCreateWithoutLeavesInput>
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutLeavesInput
  upsert?: Prisma.OrganizationUpsertWithoutLeavesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OrganizationUpdateToOneWithWhereWithoutLeavesInput, Prisma.OrganizationUpdateWithoutLeavesInput>, Prisma.OrganizationUncheckedUpdateWithoutLeavesInput>
}

export type OrganizationCreateWithoutAcademicYearInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutAcademicYearInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutAcademicYearInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicYearInput, Prisma.OrganizationUncheckedCreateWithoutAcademicYearInput>
}

export type OrganizationUpsertWithoutAcademicYearInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutAcademicYearInput, Prisma.OrganizationUncheckedUpdateWithoutAcademicYearInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicYearInput, Prisma.OrganizationUncheckedCreateWithoutAcademicYearInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutAcademicYearInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutAcademicYearInput, Prisma.OrganizationUncheckedUpdateWithoutAcademicYearInput>
}

export type OrganizationUpdateWithoutAcademicYearInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutAcademicYearInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutUsersInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutUsersInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutUsersInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutUsersInput, Prisma.OrganizationUncheckedCreateWithoutUsersInput>
}

export type OrganizationUpsertWithoutUsersInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutUsersInput, Prisma.OrganizationUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutUsersInput, Prisma.OrganizationUncheckedCreateWithoutUsersInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutUsersInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutUsersInput, Prisma.OrganizationUncheckedUpdateWithoutUsersInput>
}

export type OrganizationUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutStudentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutStudentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutStudentInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentInput, Prisma.OrganizationUncheckedCreateWithoutStudentInput>
}

export type OrganizationUpsertWithoutStudentInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutStudentInput, Prisma.OrganizationUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentInput, Prisma.OrganizationUncheckedCreateWithoutStudentInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutStudentInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutStudentInput, Prisma.OrganizationUncheckedUpdateWithoutStudentInput>
}

export type OrganizationUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutTeacherInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutTeacherInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutTeacherInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutTeacherInput, Prisma.OrganizationUncheckedCreateWithoutTeacherInput>
}

export type OrganizationUpsertWithoutTeacherInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutTeacherInput, Prisma.OrganizationUncheckedUpdateWithoutTeacherInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutTeacherInput, Prisma.OrganizationUncheckedCreateWithoutTeacherInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutTeacherInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutTeacherInput, Prisma.OrganizationUncheckedUpdateWithoutTeacherInput>
}

export type OrganizationUpdateWithoutTeacherInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutTeacherInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutGradeInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutGradeInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutGradeInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutGradeInput, Prisma.OrganizationUncheckedCreateWithoutGradeInput>
}

export type OrganizationUpsertWithoutGradeInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutGradeInput, Prisma.OrganizationUncheckedUpdateWithoutGradeInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutGradeInput, Prisma.OrganizationUncheckedCreateWithoutGradeInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutGradeInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutGradeInput, Prisma.OrganizationUncheckedUpdateWithoutGradeInput>
}

export type OrganizationUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutSectionInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutSectionInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutSectionInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutSectionInput, Prisma.OrganizationUncheckedCreateWithoutSectionInput>
}

export type OrganizationUpsertWithoutSectionInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutSectionInput, Prisma.OrganizationUncheckedUpdateWithoutSectionInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutSectionInput, Prisma.OrganizationUncheckedCreateWithoutSectionInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutSectionInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutSectionInput, Prisma.OrganizationUncheckedUpdateWithoutSectionInput>
}

export type OrganizationUpdateWithoutSectionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutSectionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutSubjectInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutSubjectInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutSubjectInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutSubjectInput, Prisma.OrganizationUncheckedCreateWithoutSubjectInput>
}

export type OrganizationUpsertWithoutSubjectInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutSubjectInput, Prisma.OrganizationUncheckedUpdateWithoutSubjectInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutSubjectInput, Prisma.OrganizationUncheckedCreateWithoutSubjectInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutSubjectInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutSubjectInput, Prisma.OrganizationUncheckedUpdateWithoutSubjectInput>
}

export type OrganizationUpdateWithoutSubjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutSubjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutTeachingAssignmentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutTeachingAssignmentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutTeachingAssignmentInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedCreateWithoutTeachingAssignmentInput>
}

export type OrganizationUpsertWithoutTeachingAssignmentInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedUpdateWithoutTeachingAssignmentInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedCreateWithoutTeachingAssignmentInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutTeachingAssignmentInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutTeachingAssignmentInput, Prisma.OrganizationUncheckedUpdateWithoutTeachingAssignmentInput>
}

export type OrganizationUpdateWithoutTeachingAssignmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutTeachingAssignmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutStudentDocumentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutStudentDocumentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutStudentDocumentInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedCreateWithoutStudentDocumentInput>
}

export type OrganizationUpsertWithoutStudentDocumentInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedUpdateWithoutStudentDocumentInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedCreateWithoutStudentDocumentInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutStudentDocumentInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutStudentDocumentInput, Prisma.OrganizationUncheckedUpdateWithoutStudentDocumentInput>
}

export type OrganizationUpdateWithoutStudentDocumentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutStudentDocumentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutFeeInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutFeeInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutFeeInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeInput, Prisma.OrganizationUncheckedCreateWithoutFeeInput>
}

export type OrganizationUpsertWithoutFeeInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeeInput, Prisma.OrganizationUncheckedUpdateWithoutFeeInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeInput, Prisma.OrganizationUncheckedCreateWithoutFeeInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutFeeInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeeInput, Prisma.OrganizationUncheckedUpdateWithoutFeeInput>
}

export type OrganizationUpdateWithoutFeeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutFeeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutFeePaymentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutFeePaymentInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutFeePaymentInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeePaymentInput, Prisma.OrganizationUncheckedCreateWithoutFeePaymentInput>
}

export type OrganizationUpsertWithoutFeePaymentInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeePaymentInput, Prisma.OrganizationUncheckedUpdateWithoutFeePaymentInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeePaymentInput, Prisma.OrganizationUncheckedCreateWithoutFeePaymentInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutFeePaymentInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeePaymentInput, Prisma.OrganizationUncheckedUpdateWithoutFeePaymentInput>
}

export type OrganizationUpdateWithoutFeePaymentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutFeePaymentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutFeeCategoryInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutFeeCategoryInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutFeeCategoryInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedCreateWithoutFeeCategoryInput>
}

export type OrganizationUpsertWithoutFeeCategoryInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedUpdateWithoutFeeCategoryInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedCreateWithoutFeeCategoryInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutFeeCategoryInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutFeeCategoryInput, Prisma.OrganizationUncheckedUpdateWithoutFeeCategoryInput>
}

export type OrganizationUpdateWithoutFeeCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutFeeCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutAcademicCalendarInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutAcademicCalendarInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutAcademicCalendarInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedCreateWithoutAcademicCalendarInput>
}

export type OrganizationUpsertWithoutAcademicCalendarInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedUpdateWithoutAcademicCalendarInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedCreateWithoutAcademicCalendarInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutAcademicCalendarInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutAcademicCalendarInput, Prisma.OrganizationUncheckedUpdateWithoutAcademicCalendarInput>
}

export type OrganizationUpdateWithoutAcademicCalendarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutAcademicCalendarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutAnonymousComplaintInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutAnonymousComplaintInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutAnonymousComplaintInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedCreateWithoutAnonymousComplaintInput>
}

export type OrganizationUpsertWithoutAnonymousComplaintInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedUpdateWithoutAnonymousComplaintInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedCreateWithoutAnonymousComplaintInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutAnonymousComplaintInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutAnonymousComplaintInput, Prisma.OrganizationUncheckedUpdateWithoutAnonymousComplaintInput>
}

export type OrganizationUpdateWithoutAnonymousComplaintInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutAnonymousComplaintInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutNoticesInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutNoticesInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutNoticesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutNoticesInput, Prisma.OrganizationUncheckedCreateWithoutNoticesInput>
}

export type OrganizationUpsertWithoutNoticesInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutNoticesInput, Prisma.OrganizationUncheckedUpdateWithoutNoticesInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutNoticesInput, Prisma.OrganizationUncheckedCreateWithoutNoticesInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutNoticesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutNoticesInput, Prisma.OrganizationUncheckedUpdateWithoutNoticesInput>
}

export type OrganizationUpdateWithoutNoticesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutNoticesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutNotificationLogInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutNotificationLogInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutNotificationLogInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutNotificationLogInput, Prisma.OrganizationUncheckedCreateWithoutNotificationLogInput>
}

export type OrganizationUpsertWithoutNotificationLogInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutNotificationLogInput, Prisma.OrganizationUncheckedUpdateWithoutNotificationLogInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutNotificationLogInput, Prisma.OrganizationUncheckedCreateWithoutNotificationLogInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutNotificationLogInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutNotificationLogInput, Prisma.OrganizationUncheckedUpdateWithoutNotificationLogInput>
}

export type OrganizationUpdateWithoutNotificationLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutNotificationLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutScheduledJobInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutScheduledJobInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutScheduledJobInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutScheduledJobInput, Prisma.OrganizationUncheckedCreateWithoutScheduledJobInput>
}

export type OrganizationUpsertWithoutScheduledJobInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutScheduledJobInput, Prisma.OrganizationUncheckedUpdateWithoutScheduledJobInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutScheduledJobInput, Prisma.OrganizationUncheckedCreateWithoutScheduledJobInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutScheduledJobInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutScheduledJobInput, Prisma.OrganizationUncheckedUpdateWithoutScheduledJobInput>
}

export type OrganizationUpdateWithoutScheduledJobInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutScheduledJobInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutExamInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutExamInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutExamInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutExamInput, Prisma.OrganizationUncheckedCreateWithoutExamInput>
}

export type OrganizationUpsertWithoutExamInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutExamInput, Prisma.OrganizationUncheckedUpdateWithoutExamInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutExamInput, Prisma.OrganizationUncheckedCreateWithoutExamInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutExamInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutExamInput, Prisma.OrganizationUncheckedUpdateWithoutExamInput>
}

export type OrganizationUpdateWithoutExamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutExamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutHallTicketInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutHallTicketInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  leaves?: Prisma.LeaveUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutHallTicketInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutHallTicketInput, Prisma.OrganizationUncheckedCreateWithoutHallTicketInput>
}

export type OrganizationUpsertWithoutHallTicketInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutHallTicketInput, Prisma.OrganizationUncheckedUpdateWithoutHallTicketInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutHallTicketInput, Prisma.OrganizationUncheckedCreateWithoutHallTicketInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutHallTicketInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutHallTicketInput, Prisma.OrganizationUncheckedUpdateWithoutHallTicketInput>
}

export type OrganizationUpdateWithoutHallTicketInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutHallTicketInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  leaves?: Prisma.LeaveUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutLeavesInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutLeavesInput = {
  id?: string
  name?: string | null
  organizationSlug: string
  organizationLogo?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  website?: string | null
  isActive?: boolean
  isPaid?: boolean
  plan?: $Enums.PlanType
  planStartedAt?: Date | string | null
  planExpiresAt?: Date | string | null
  maxStudents?: number | null
  organizationType?: $Enums.OrganizationType | null
  createdBy?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  notices?: Prisma.NoticeUncheckedCreateNestedManyWithoutOrganizationInput
  Student?: Prisma.StudentUncheckedCreateNestedManyWithoutOrganizationInput
  StudentDocument?: Prisma.StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput
  Grade?: Prisma.GradeUncheckedCreateNestedManyWithoutOrganizationInput
  Section?: Prisma.SectionUncheckedCreateNestedManyWithoutOrganizationInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutOrganizationInput
  FeeCategory?: Prisma.FeeCategoryUncheckedCreateNestedManyWithoutOrganizationInput
  FeePayment?: Prisma.FeePaymentUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedCreateNestedManyWithoutOrganizationInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedCreateNestedManyWithoutOrganizationInput
  Teacher?: Prisma.TeacherUncheckedCreateNestedManyWithoutOrganizationInput
  Subject?: Prisma.SubjectUncheckedCreateNestedManyWithoutOrganizationInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedCreateNestedManyWithoutOrganizationInput
  NotificationLog?: Prisma.NotificationLogUncheckedCreateNestedManyWithoutOrganizationInput
  AcademicYear?: Prisma.AcademicYearUncheckedCreateNestedManyWithoutOrganizationInput
  scheduledJob?: Prisma.ScheduledJobUncheckedCreateNestedManyWithoutOrganizationInput
  exam?: Prisma.ExamUncheckedCreateNestedManyWithoutOrganizationInput
  hallTicket?: Prisma.HallTicketUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutLeavesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutLeavesInput, Prisma.OrganizationUncheckedCreateWithoutLeavesInput>
}

export type OrganizationUpsertWithoutLeavesInput = {
  update: Prisma.XOR<Prisma.OrganizationUpdateWithoutLeavesInput, Prisma.OrganizationUncheckedUpdateWithoutLeavesInput>
  create: Prisma.XOR<Prisma.OrganizationCreateWithoutLeavesInput, Prisma.OrganizationUncheckedCreateWithoutLeavesInput>
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutLeavesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<Prisma.OrganizationUpdateWithoutLeavesInput, Prisma.OrganizationUncheckedUpdateWithoutLeavesInput>
}

export type OrganizationUpdateWithoutLeavesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutLeavesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationSlug?: Prisma.StringFieldUpdateOperationsInput | string
  organizationLogo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  plan?: Prisma.EnumPlanTypeFieldUpdateOperationsInput | $Enums.PlanType
  planStartedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  planExpiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  maxStudents?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  organizationType?: Prisma.NullableEnumOrganizationTypeFieldUpdateOperationsInput | $Enums.OrganizationType | null
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  notices?: Prisma.NoticeUncheckedUpdateManyWithoutOrganizationNestedInput
  Student?: Prisma.StudentUncheckedUpdateManyWithoutOrganizationNestedInput
  StudentDocument?: Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput
  Grade?: Prisma.GradeUncheckedUpdateManyWithoutOrganizationNestedInput
  Section?: Prisma.SectionUncheckedUpdateManyWithoutOrganizationNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutOrganizationNestedInput
  FeeCategory?: Prisma.FeeCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
  FeePayment?: Prisma.FeePaymentUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicCalendar?: Prisma.AcademicCalendarUncheckedUpdateManyWithoutOrganizationNestedInput
  AnonymousComplaint?: Prisma.AnonymousComplaintUncheckedUpdateManyWithoutOrganizationNestedInput
  Teacher?: Prisma.TeacherUncheckedUpdateManyWithoutOrganizationNestedInput
  Subject?: Prisma.SubjectUncheckedUpdateManyWithoutOrganizationNestedInput
  TeachingAssignment?: Prisma.TeachingAssignmentUncheckedUpdateManyWithoutOrganizationNestedInput
  NotificationLog?: Prisma.NotificationLogUncheckedUpdateManyWithoutOrganizationNestedInput
  AcademicYear?: Prisma.AcademicYearUncheckedUpdateManyWithoutOrganizationNestedInput
  scheduledJob?: Prisma.ScheduledJobUncheckedUpdateManyWithoutOrganizationNestedInput
  exam?: Prisma.ExamUncheckedUpdateManyWithoutOrganizationNestedInput
  hallTicket?: Prisma.HallTicketUncheckedUpdateManyWithoutOrganizationNestedInput
}


/**
 * Count Type OrganizationCountOutputType
 */

export type OrganizationCountOutputType = {
  users: number
  notices: number
  Student: number
  StudentDocument: number
  Grade: number
  Section: number
  Fee: number
  FeeCategory: number
  FeePayment: number
  AcademicCalendar: number
  AnonymousComplaint: number
  Teacher: number
  Subject: number
  TeachingAssignment: number
  NotificationLog: number
  AcademicYear: number
  scheduledJob: number
  leaves: number
  exam: number
  hallTicket: number
}

export type OrganizationCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | OrganizationCountOutputTypeCountUsersArgs
  notices?: boolean | OrganizationCountOutputTypeCountNoticesArgs
  Student?: boolean | OrganizationCountOutputTypeCountStudentArgs
  StudentDocument?: boolean | OrganizationCountOutputTypeCountStudentDocumentArgs
  Grade?: boolean | OrganizationCountOutputTypeCountGradeArgs
  Section?: boolean | OrganizationCountOutputTypeCountSectionArgs
  Fee?: boolean | OrganizationCountOutputTypeCountFeeArgs
  FeeCategory?: boolean | OrganizationCountOutputTypeCountFeeCategoryArgs
  FeePayment?: boolean | OrganizationCountOutputTypeCountFeePaymentArgs
  AcademicCalendar?: boolean | OrganizationCountOutputTypeCountAcademicCalendarArgs
  AnonymousComplaint?: boolean | OrganizationCountOutputTypeCountAnonymousComplaintArgs
  Teacher?: boolean | OrganizationCountOutputTypeCountTeacherArgs
  Subject?: boolean | OrganizationCountOutputTypeCountSubjectArgs
  TeachingAssignment?: boolean | OrganizationCountOutputTypeCountTeachingAssignmentArgs
  NotificationLog?: boolean | OrganizationCountOutputTypeCountNotificationLogArgs
  AcademicYear?: boolean | OrganizationCountOutputTypeCountAcademicYearArgs
  scheduledJob?: boolean | OrganizationCountOutputTypeCountScheduledJobArgs
  leaves?: boolean | OrganizationCountOutputTypeCountLeavesArgs
  exam?: boolean | OrganizationCountOutputTypeCountExamArgs
  hallTicket?: boolean | OrganizationCountOutputTypeCountHallTicketArgs
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrganizationCountOutputType
   */
  select?: Prisma.OrganizationCountOutputTypeSelect<ExtArgs> | null
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountUsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountNoticesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NoticeWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountStudentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountStudentDocumentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentDocumentWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountGradeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GradeWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountSectionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SectionWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountFeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FeeWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountFeeCategoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FeeCategoryWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountFeePaymentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FeePaymentWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountAcademicCalendarArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AcademicCalendarWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountAnonymousComplaintArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AnonymousComplaintWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountTeacherArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TeacherWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountSubjectArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SubjectWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountTeachingAssignmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TeachingAssignmentWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountNotificationLogArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationLogWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountAcademicYearArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AcademicYearWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountScheduledJobArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ScheduledJobWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountLeavesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeaveWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountExamArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ExamWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountHallTicketArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.HallTicketWhereInput
}


export type OrganizationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  organizationSlug?: boolean
  organizationLogo?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  website?: boolean
  isActive?: boolean
  isPaid?: boolean
  plan?: boolean
  planStartedAt?: boolean
  planExpiresAt?: boolean
  maxStudents?: boolean
  organizationType?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  users?: boolean | Prisma.Organization$usersArgs<ExtArgs>
  notices?: boolean | Prisma.Organization$noticesArgs<ExtArgs>
  Student?: boolean | Prisma.Organization$StudentArgs<ExtArgs>
  StudentDocument?: boolean | Prisma.Organization$StudentDocumentArgs<ExtArgs>
  Grade?: boolean | Prisma.Organization$GradeArgs<ExtArgs>
  Section?: boolean | Prisma.Organization$SectionArgs<ExtArgs>
  Fee?: boolean | Prisma.Organization$FeeArgs<ExtArgs>
  FeeCategory?: boolean | Prisma.Organization$FeeCategoryArgs<ExtArgs>
  FeePayment?: boolean | Prisma.Organization$FeePaymentArgs<ExtArgs>
  AcademicCalendar?: boolean | Prisma.Organization$AcademicCalendarArgs<ExtArgs>
  AnonymousComplaint?: boolean | Prisma.Organization$AnonymousComplaintArgs<ExtArgs>
  Teacher?: boolean | Prisma.Organization$TeacherArgs<ExtArgs>
  Subject?: boolean | Prisma.Organization$SubjectArgs<ExtArgs>
  TeachingAssignment?: boolean | Prisma.Organization$TeachingAssignmentArgs<ExtArgs>
  NotificationLog?: boolean | Prisma.Organization$NotificationLogArgs<ExtArgs>
  AcademicYear?: boolean | Prisma.Organization$AcademicYearArgs<ExtArgs>
  scheduledJob?: boolean | Prisma.Organization$scheduledJobArgs<ExtArgs>
  leaves?: boolean | Prisma.Organization$leavesArgs<ExtArgs>
  exam?: boolean | Prisma.Organization$examArgs<ExtArgs>
  hallTicket?: boolean | Prisma.Organization$hallTicketArgs<ExtArgs>
  _count?: boolean | Prisma.OrganizationCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["organization"]>

export type OrganizationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  organizationSlug?: boolean
  organizationLogo?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  website?: boolean
  isActive?: boolean
  isPaid?: boolean
  plan?: boolean
  planStartedAt?: boolean
  planExpiresAt?: boolean
  maxStudents?: boolean
  organizationType?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["organization"]>

export type OrganizationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  organizationSlug?: boolean
  organizationLogo?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  website?: boolean
  isActive?: boolean
  isPaid?: boolean
  plan?: boolean
  planStartedAt?: boolean
  planExpiresAt?: boolean
  maxStudents?: boolean
  organizationType?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["organization"]>

export type OrganizationSelectScalar = {
  id?: boolean
  name?: boolean
  organizationSlug?: boolean
  organizationLogo?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  website?: boolean
  isActive?: boolean
  isPaid?: boolean
  plan?: boolean
  planStartedAt?: boolean
  planExpiresAt?: boolean
  maxStudents?: boolean
  organizationType?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type OrganizationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "organizationSlug" | "organizationLogo" | "contactEmail" | "contactPhone" | "website" | "isActive" | "isPaid" | "plan" | "planStartedAt" | "planExpiresAt" | "maxStudents" | "organizationType" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["organization"]>
export type OrganizationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.Organization$usersArgs<ExtArgs>
  notices?: boolean | Prisma.Organization$noticesArgs<ExtArgs>
  Student?: boolean | Prisma.Organization$StudentArgs<ExtArgs>
  StudentDocument?: boolean | Prisma.Organization$StudentDocumentArgs<ExtArgs>
  Grade?: boolean | Prisma.Organization$GradeArgs<ExtArgs>
  Section?: boolean | Prisma.Organization$SectionArgs<ExtArgs>
  Fee?: boolean | Prisma.Organization$FeeArgs<ExtArgs>
  FeeCategory?: boolean | Prisma.Organization$FeeCategoryArgs<ExtArgs>
  FeePayment?: boolean | Prisma.Organization$FeePaymentArgs<ExtArgs>
  AcademicCalendar?: boolean | Prisma.Organization$AcademicCalendarArgs<ExtArgs>
  AnonymousComplaint?: boolean | Prisma.Organization$AnonymousComplaintArgs<ExtArgs>
  Teacher?: boolean | Prisma.Organization$TeacherArgs<ExtArgs>
  Subject?: boolean | Prisma.Organization$SubjectArgs<ExtArgs>
  TeachingAssignment?: boolean | Prisma.Organization$TeachingAssignmentArgs<ExtArgs>
  NotificationLog?: boolean | Prisma.Organization$NotificationLogArgs<ExtArgs>
  AcademicYear?: boolean | Prisma.Organization$AcademicYearArgs<ExtArgs>
  scheduledJob?: boolean | Prisma.Organization$scheduledJobArgs<ExtArgs>
  leaves?: boolean | Prisma.Organization$leavesArgs<ExtArgs>
  exam?: boolean | Prisma.Organization$examArgs<ExtArgs>
  hallTicket?: boolean | Prisma.Organization$hallTicketArgs<ExtArgs>
  _count?: boolean | Prisma.OrganizationCountOutputTypeDefaultArgs<ExtArgs>
}
export type OrganizationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type OrganizationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $OrganizationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Organization"
  objects: {
    users: Prisma.$UserPayload<ExtArgs>[]
    notices: Prisma.$NoticePayload<ExtArgs>[]
    Student: Prisma.$StudentPayload<ExtArgs>[]
    StudentDocument: Prisma.$StudentDocumentPayload<ExtArgs>[]
    Grade: Prisma.$GradePayload<ExtArgs>[]
    Section: Prisma.$SectionPayload<ExtArgs>[]
    Fee: Prisma.$FeePayload<ExtArgs>[]
    FeeCategory: Prisma.$FeeCategoryPayload<ExtArgs>[]
    FeePayment: Prisma.$FeePaymentPayload<ExtArgs>[]
    AcademicCalendar: Prisma.$AcademicCalendarPayload<ExtArgs>[]
    AnonymousComplaint: Prisma.$AnonymousComplaintPayload<ExtArgs>[]
    Teacher: Prisma.$TeacherPayload<ExtArgs>[]
    Subject: Prisma.$SubjectPayload<ExtArgs>[]
    TeachingAssignment: Prisma.$TeachingAssignmentPayload<ExtArgs>[]
    NotificationLog: Prisma.$NotificationLogPayload<ExtArgs>[]
    AcademicYear: Prisma.$AcademicYearPayload<ExtArgs>[]
    scheduledJob: Prisma.$ScheduledJobPayload<ExtArgs>[]
    leaves: Prisma.$LeavePayload<ExtArgs>[]
    exam: Prisma.$ExamPayload<ExtArgs>[]
    hallTicket: Prisma.$HallTicketPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string | null
    organizationSlug: string
    organizationLogo: string | null
    contactEmail: string | null
    contactPhone: string | null
    website: string | null
    isActive: boolean
    isPaid: boolean
    plan: $Enums.PlanType
    planStartedAt: Date | null
    planExpiresAt: Date | null
    maxStudents: number | null
    organizationType: $Enums.OrganizationType | null
    createdBy: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["organization"]>
  composites: {}
}

export type OrganizationGetPayload<S extends boolean | null | undefined | OrganizationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OrganizationPayload, S>

export type OrganizationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OrganizationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OrganizationCountAggregateInputType | true
  }

export interface OrganizationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organization'], meta: { name: 'Organization' } }
  /**
   * Find zero or one Organization that matches the filter.
   * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrganizationFindUniqueArgs>(args: Prisma.SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Organization that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Organization that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrganizationFindFirstArgs>(args?: Prisma.SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Organization that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Organizations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Organizations
   * const organizations = await prisma.organization.findMany()
   * 
   * // Get first 10 Organizations
   * const organizations = await prisma.organization.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OrganizationFindManyArgs>(args?: Prisma.SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Organization.
   * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
   * @example
   * // Create one Organization
   * const Organization = await prisma.organization.create({
   *   data: {
   *     // ... data to create a Organization
   *   }
   * })
   * 
   */
  create<T extends OrganizationCreateArgs>(args: Prisma.SelectSubset<T, OrganizationCreateArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Organizations.
   * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
   * @example
   * // Create many Organizations
   * const organization = await prisma.organization.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OrganizationCreateManyArgs>(args?: Prisma.SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Organizations and returns the data saved in the database.
   * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
   * @example
   * // Create many Organizations
   * const organization = await prisma.organization.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Organizations and only return the `id`
   * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Organization.
   * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
   * @example
   * // Delete one Organization
   * const Organization = await prisma.organization.delete({
   *   where: {
   *     // ... filter to delete one Organization
   *   }
   * })
   * 
   */
  delete<T extends OrganizationDeleteArgs>(args: Prisma.SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Organization.
   * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
   * @example
   * // Update one Organization
   * const organization = await prisma.organization.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OrganizationUpdateArgs>(args: Prisma.SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Organizations.
   * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
   * @example
   * // Delete a few Organizations
   * const { count } = await prisma.organization.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OrganizationDeleteManyArgs>(args?: Prisma.SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Organizations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Organizations
   * const organization = await prisma.organization.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OrganizationUpdateManyArgs>(args: Prisma.SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Organizations and returns the data updated in the database.
   * @param {OrganizationUpdateManyAndReturnArgs} args - Arguments to update many Organizations.
   * @example
   * // Update many Organizations
   * const organization = await prisma.organization.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Organizations and only return the `id`
   * const organizationWithIdOnly = await prisma.organization.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OrganizationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OrganizationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Organization.
   * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
   * @example
   * // Update or create a Organization
   * const organization = await prisma.organization.upsert({
   *   create: {
   *     // ... data to create a Organization
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Organization we want to update
   *   }
   * })
   */
  upsert<T extends OrganizationUpsertArgs>(args: Prisma.SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Organizations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
   * @example
   * // Count the number of Organizations
   * const count = await prisma.organization.count({
   *   where: {
   *     // ... the filter for the Organizations we want to count
   *   }
   * })
  **/
  count<T extends OrganizationCountArgs>(
    args?: Prisma.Subset<T, OrganizationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OrganizationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Organization.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OrganizationAggregateArgs>(args: Prisma.Subset<T, OrganizationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

  /**
   * Group by Organization.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OrganizationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrganizationGroupByArgs['orderBy'] }
      : { orderBy?: OrganizationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Organization model
 */
readonly fields: OrganizationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Organization.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrganizationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  users<T extends Prisma.Organization$usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$usersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notices<T extends Prisma.Organization$noticesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$noticesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Student<T extends Prisma.Organization$StudentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$StudentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  StudentDocument<T extends Prisma.Organization$StudentDocumentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$StudentDocumentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Grade<T extends Prisma.Organization$GradeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$GradeArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GradePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Section<T extends Prisma.Organization$SectionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$SectionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Fee<T extends Prisma.Organization$FeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$FeeArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  FeeCategory<T extends Prisma.Organization$FeeCategoryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$FeeCategoryArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FeeCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  FeePayment<T extends Prisma.Organization$FeePaymentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$FeePaymentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FeePaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  AcademicCalendar<T extends Prisma.Organization$AcademicCalendarArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$AcademicCalendarArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AcademicCalendarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  AnonymousComplaint<T extends Prisma.Organization$AnonymousComplaintArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$AnonymousComplaintArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnonymousComplaintPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Teacher<T extends Prisma.Organization$TeacherArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$TeacherArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TeacherPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Subject<T extends Prisma.Organization$SubjectArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$SubjectArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SubjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  TeachingAssignment<T extends Prisma.Organization$TeachingAssignmentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$TeachingAssignmentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TeachingAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  NotificationLog<T extends Prisma.Organization$NotificationLogArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$NotificationLogArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  AcademicYear<T extends Prisma.Organization$AcademicYearArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$AcademicYearArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AcademicYearPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  scheduledJob<T extends Prisma.Organization$scheduledJobArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$scheduledJobArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledJobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaves<T extends Prisma.Organization$leavesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$leavesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  exam<T extends Prisma.Organization$examArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$examArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ExamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  hallTicket<T extends Prisma.Organization$hallTicketArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Organization$hallTicketArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HallTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Organization model
 */
export interface OrganizationFieldRefs {
  readonly id: Prisma.FieldRef<"Organization", 'String'>
  readonly name: Prisma.FieldRef<"Organization", 'String'>
  readonly organizationSlug: Prisma.FieldRef<"Organization", 'String'>
  readonly organizationLogo: Prisma.FieldRef<"Organization", 'String'>
  readonly contactEmail: Prisma.FieldRef<"Organization", 'String'>
  readonly contactPhone: Prisma.FieldRef<"Organization", 'String'>
  readonly website: Prisma.FieldRef<"Organization", 'String'>
  readonly isActive: Prisma.FieldRef<"Organization", 'Boolean'>
  readonly isPaid: Prisma.FieldRef<"Organization", 'Boolean'>
  readonly plan: Prisma.FieldRef<"Organization", 'PlanType'>
  readonly planStartedAt: Prisma.FieldRef<"Organization", 'DateTime'>
  readonly planExpiresAt: Prisma.FieldRef<"Organization", 'DateTime'>
  readonly maxStudents: Prisma.FieldRef<"Organization", 'Int'>
  readonly organizationType: Prisma.FieldRef<"Organization", 'OrganizationType'>
  readonly createdBy: Prisma.FieldRef<"Organization", 'String'>
  readonly createdAt: Prisma.FieldRef<"Organization", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Organization", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Organization findUnique
 */
export type OrganizationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization findUniqueOrThrow
 */
export type OrganizationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization findFirst
 */
export type OrganizationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Organizations to fetch.
   */
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Organizations.
   */
  distinct?: Prisma.OrganizationScalarFieldEnum | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization findFirstOrThrow
 */
export type OrganizationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Organizations to fetch.
   */
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Organizations.
   */
  distinct?: Prisma.OrganizationScalarFieldEnum | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization findMany
 */
export type OrganizationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organizations to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Organizations to fetch.
   */
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Organizations.
   */
  skip?: number
  distinct?: Prisma.OrganizationScalarFieldEnum | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization create
 */
export type OrganizationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The data needed to create a Organization.
   */
  data: Prisma.XOR<Prisma.OrganizationCreateInput, Prisma.OrganizationUncheckedCreateInput>
}

/**
 * Organization createMany
 */
export type OrganizationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Organizations.
   */
  data: Prisma.OrganizationCreateManyInput | Prisma.OrganizationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Organization createManyAndReturn
 */
export type OrganizationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * The data used to create many Organizations.
   */
  data: Prisma.OrganizationCreateManyInput | Prisma.OrganizationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Organization update
 */
export type OrganizationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The data needed to update a Organization.
   */
  data: Prisma.XOR<Prisma.OrganizationUpdateInput, Prisma.OrganizationUncheckedUpdateInput>
  /**
   * Choose, which Organization to update.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization updateMany
 */
export type OrganizationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Organizations.
   */
  data: Prisma.XOR<Prisma.OrganizationUpdateManyMutationInput, Prisma.OrganizationUncheckedUpdateManyInput>
  /**
   * Filter which Organizations to update
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to update.
   */
  limit?: number
}

/**
 * Organization updateManyAndReturn
 */
export type OrganizationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * The data used to update Organizations.
   */
  data: Prisma.XOR<Prisma.OrganizationUpdateManyMutationInput, Prisma.OrganizationUncheckedUpdateManyInput>
  /**
   * Filter which Organizations to update
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to update.
   */
  limit?: number
}

/**
 * Organization upsert
 */
export type OrganizationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The filter to search for the Organization to update in case it exists.
   */
  where: Prisma.OrganizationWhereUniqueInput
  /**
   * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
   */
  create: Prisma.XOR<Prisma.OrganizationCreateInput, Prisma.OrganizationUncheckedCreateInput>
  /**
   * In case the Organization was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OrganizationUpdateInput, Prisma.OrganizationUncheckedUpdateInput>
}

/**
 * Organization delete
 */
export type OrganizationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter which Organization to delete.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization deleteMany
 */
export type OrganizationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Organizations to delete
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to delete.
   */
  limit?: number
}

/**
 * Organization.users
 */
export type Organization$usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  cursor?: Prisma.UserWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * Organization.notices
 */
export type Organization$noticesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notice
   */
  select?: Prisma.NoticeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notice
   */
  omit?: Prisma.NoticeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NoticeInclude<ExtArgs> | null
  where?: Prisma.NoticeWhereInput
  orderBy?: Prisma.NoticeOrderByWithRelationInput | Prisma.NoticeOrderByWithRelationInput[]
  cursor?: Prisma.NoticeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NoticeScalarFieldEnum | Prisma.NoticeScalarFieldEnum[]
}

/**
 * Organization.Student
 */
export type Organization$StudentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  where?: Prisma.StudentWhereInput
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  cursor?: Prisma.StudentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Organization.StudentDocument
 */
export type Organization$StudentDocumentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  where?: Prisma.StudentDocumentWhereInput
  orderBy?: Prisma.StudentDocumentOrderByWithRelationInput | Prisma.StudentDocumentOrderByWithRelationInput[]
  cursor?: Prisma.StudentDocumentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentDocumentScalarFieldEnum | Prisma.StudentDocumentScalarFieldEnum[]
}

/**
 * Organization.Grade
 */
export type Organization$GradeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Grade
   */
  select?: Prisma.GradeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Grade
   */
  omit?: Prisma.GradeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeInclude<ExtArgs> | null
  where?: Prisma.GradeWhereInput
  orderBy?: Prisma.GradeOrderByWithRelationInput | Prisma.GradeOrderByWithRelationInput[]
  cursor?: Prisma.GradeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GradeScalarFieldEnum | Prisma.GradeScalarFieldEnum[]
}

/**
 * Organization.Section
 */
export type Organization$SectionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Section
   */
  select?: Prisma.SectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Section
   */
  omit?: Prisma.SectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SectionInclude<ExtArgs> | null
  where?: Prisma.SectionWhereInput
  orderBy?: Prisma.SectionOrderByWithRelationInput | Prisma.SectionOrderByWithRelationInput[]
  cursor?: Prisma.SectionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SectionScalarFieldEnum | Prisma.SectionScalarFieldEnum[]
}

/**
 * Organization.Fee
 */
export type Organization$FeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Fee
   */
  select?: Prisma.FeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Fee
   */
  omit?: Prisma.FeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeeInclude<ExtArgs> | null
  where?: Prisma.FeeWhereInput
  orderBy?: Prisma.FeeOrderByWithRelationInput | Prisma.FeeOrderByWithRelationInput[]
  cursor?: Prisma.FeeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeeScalarFieldEnum | Prisma.FeeScalarFieldEnum[]
}

/**
 * Organization.FeeCategory
 */
export type Organization$FeeCategoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FeeCategory
   */
  select?: Prisma.FeeCategorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the FeeCategory
   */
  omit?: Prisma.FeeCategoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeeCategoryInclude<ExtArgs> | null
  where?: Prisma.FeeCategoryWhereInput
  orderBy?: Prisma.FeeCategoryOrderByWithRelationInput | Prisma.FeeCategoryOrderByWithRelationInput[]
  cursor?: Prisma.FeeCategoryWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeeCategoryScalarFieldEnum | Prisma.FeeCategoryScalarFieldEnum[]
}

/**
 * Organization.FeePayment
 */
export type Organization$FeePaymentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FeePayment
   */
  select?: Prisma.FeePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FeePayment
   */
  omit?: Prisma.FeePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeePaymentInclude<ExtArgs> | null
  where?: Prisma.FeePaymentWhereInput
  orderBy?: Prisma.FeePaymentOrderByWithRelationInput | Prisma.FeePaymentOrderByWithRelationInput[]
  cursor?: Prisma.FeePaymentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeePaymentScalarFieldEnum | Prisma.FeePaymentScalarFieldEnum[]
}

/**
 * Organization.AcademicCalendar
 */
export type Organization$AcademicCalendarArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AcademicCalendar
   */
  select?: Prisma.AcademicCalendarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AcademicCalendar
   */
  omit?: Prisma.AcademicCalendarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AcademicCalendarInclude<ExtArgs> | null
  where?: Prisma.AcademicCalendarWhereInput
  orderBy?: Prisma.AcademicCalendarOrderByWithRelationInput | Prisma.AcademicCalendarOrderByWithRelationInput[]
  cursor?: Prisma.AcademicCalendarWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AcademicCalendarScalarFieldEnum | Prisma.AcademicCalendarScalarFieldEnum[]
}

/**
 * Organization.AnonymousComplaint
 */
export type Organization$AnonymousComplaintArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AnonymousComplaint
   */
  select?: Prisma.AnonymousComplaintSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AnonymousComplaint
   */
  omit?: Prisma.AnonymousComplaintOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnonymousComplaintInclude<ExtArgs> | null
  where?: Prisma.AnonymousComplaintWhereInput
  orderBy?: Prisma.AnonymousComplaintOrderByWithRelationInput | Prisma.AnonymousComplaintOrderByWithRelationInput[]
  cursor?: Prisma.AnonymousComplaintWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AnonymousComplaintScalarFieldEnum | Prisma.AnonymousComplaintScalarFieldEnum[]
}

/**
 * Organization.Teacher
 */
export type Organization$TeacherArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Teacher
   */
  select?: Prisma.TeacherSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Teacher
   */
  omit?: Prisma.TeacherOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeacherInclude<ExtArgs> | null
  where?: Prisma.TeacherWhereInput
  orderBy?: Prisma.TeacherOrderByWithRelationInput | Prisma.TeacherOrderByWithRelationInput[]
  cursor?: Prisma.TeacherWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TeacherScalarFieldEnum | Prisma.TeacherScalarFieldEnum[]
}

/**
 * Organization.Subject
 */
export type Organization$SubjectArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Subject
   */
  select?: Prisma.SubjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Subject
   */
  omit?: Prisma.SubjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubjectInclude<ExtArgs> | null
  where?: Prisma.SubjectWhereInput
  orderBy?: Prisma.SubjectOrderByWithRelationInput | Prisma.SubjectOrderByWithRelationInput[]
  cursor?: Prisma.SubjectWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SubjectScalarFieldEnum | Prisma.SubjectScalarFieldEnum[]
}

/**
 * Organization.TeachingAssignment
 */
export type Organization$TeachingAssignmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TeachingAssignment
   */
  select?: Prisma.TeachingAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TeachingAssignment
   */
  omit?: Prisma.TeachingAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeachingAssignmentInclude<ExtArgs> | null
  where?: Prisma.TeachingAssignmentWhereInput
  orderBy?: Prisma.TeachingAssignmentOrderByWithRelationInput | Prisma.TeachingAssignmentOrderByWithRelationInput[]
  cursor?: Prisma.TeachingAssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TeachingAssignmentScalarFieldEnum | Prisma.TeachingAssignmentScalarFieldEnum[]
}

/**
 * Organization.NotificationLog
 */
export type Organization$NotificationLogArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NotificationLog
   */
  select?: Prisma.NotificationLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NotificationLog
   */
  omit?: Prisma.NotificationLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationLogInclude<ExtArgs> | null
  where?: Prisma.NotificationLogWhereInput
  orderBy?: Prisma.NotificationLogOrderByWithRelationInput | Prisma.NotificationLogOrderByWithRelationInput[]
  cursor?: Prisma.NotificationLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationLogScalarFieldEnum | Prisma.NotificationLogScalarFieldEnum[]
}

/**
 * Organization.AcademicYear
 */
export type Organization$AcademicYearArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AcademicYear
   */
  select?: Prisma.AcademicYearSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AcademicYear
   */
  omit?: Prisma.AcademicYearOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AcademicYearInclude<ExtArgs> | null
  where?: Prisma.AcademicYearWhereInput
  orderBy?: Prisma.AcademicYearOrderByWithRelationInput | Prisma.AcademicYearOrderByWithRelationInput[]
  cursor?: Prisma.AcademicYearWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AcademicYearScalarFieldEnum | Prisma.AcademicYearScalarFieldEnum[]
}

/**
 * Organization.scheduledJob
 */
export type Organization$scheduledJobArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledJob
   */
  select?: Prisma.ScheduledJobSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledJob
   */
  omit?: Prisma.ScheduledJobOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledJobInclude<ExtArgs> | null
  where?: Prisma.ScheduledJobWhereInput
  orderBy?: Prisma.ScheduledJobOrderByWithRelationInput | Prisma.ScheduledJobOrderByWithRelationInput[]
  cursor?: Prisma.ScheduledJobWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ScheduledJobScalarFieldEnum | Prisma.ScheduledJobScalarFieldEnum[]
}

/**
 * Organization.leaves
 */
export type Organization$leavesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Leave
   */
  select?: Prisma.LeaveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Leave
   */
  omit?: Prisma.LeaveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveInclude<ExtArgs> | null
  where?: Prisma.LeaveWhereInput
  orderBy?: Prisma.LeaveOrderByWithRelationInput | Prisma.LeaveOrderByWithRelationInput[]
  cursor?: Prisma.LeaveWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaveScalarFieldEnum | Prisma.LeaveScalarFieldEnum[]
}

/**
 * Organization.exam
 */
export type Organization$examArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Exam
   */
  select?: Prisma.ExamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Exam
   */
  omit?: Prisma.ExamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExamInclude<ExtArgs> | null
  where?: Prisma.ExamWhereInput
  orderBy?: Prisma.ExamOrderByWithRelationInput | Prisma.ExamOrderByWithRelationInput[]
  cursor?: Prisma.ExamWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ExamScalarFieldEnum | Prisma.ExamScalarFieldEnum[]
}

/**
 * Organization.hallTicket
 */
export type Organization$hallTicketArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HallTicket
   */
  select?: Prisma.HallTicketSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HallTicket
   */
  omit?: Prisma.HallTicketOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HallTicketInclude<ExtArgs> | null
  where?: Prisma.HallTicketWhereInput
  orderBy?: Prisma.HallTicketOrderByWithRelationInput | Prisma.HallTicketOrderByWithRelationInput[]
  cursor?: Prisma.HallTicketWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.HallTicketScalarFieldEnum | Prisma.HallTicketScalarFieldEnum[]
}

/**
 * Organization without action
 */
export type OrganizationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
}
