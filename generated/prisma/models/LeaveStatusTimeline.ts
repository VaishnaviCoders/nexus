
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `LeaveStatusTimeline` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model LeaveStatusTimeline
 * 
 */
export type LeaveStatusTimelineModel = runtime.Types.Result.DefaultSelection<Prisma.$LeaveStatusTimelinePayload>

export type AggregateLeaveStatusTimeline = {
  _count: LeaveStatusTimelineCountAggregateOutputType | null
  _min: LeaveStatusTimelineMinAggregateOutputType | null
  _max: LeaveStatusTimelineMaxAggregateOutputType | null
}

export type LeaveStatusTimelineMinAggregateOutputType = {
  id: string | null
  leaveId: string | null
  status: $Enums.LeaveStatus | null
  note: string | null
  changedBy: string | null
  changedAt: Date | null
}

export type LeaveStatusTimelineMaxAggregateOutputType = {
  id: string | null
  leaveId: string | null
  status: $Enums.LeaveStatus | null
  note: string | null
  changedBy: string | null
  changedAt: Date | null
}

export type LeaveStatusTimelineCountAggregateOutputType = {
  id: number
  leaveId: number
  status: number
  note: number
  changedBy: number
  changedAt: number
  _all: number
}


export type LeaveStatusTimelineMinAggregateInputType = {
  id?: true
  leaveId?: true
  status?: true
  note?: true
  changedBy?: true
  changedAt?: true
}

export type LeaveStatusTimelineMaxAggregateInputType = {
  id?: true
  leaveId?: true
  status?: true
  note?: true
  changedBy?: true
  changedAt?: true
}

export type LeaveStatusTimelineCountAggregateInputType = {
  id?: true
  leaveId?: true
  status?: true
  note?: true
  changedBy?: true
  changedAt?: true
  _all?: true
}

export type LeaveStatusTimelineAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which LeaveStatusTimeline to aggregate.
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of LeaveStatusTimelines to fetch.
   */
  orderBy?: Prisma.LeaveStatusTimelineOrderByWithRelationInput | Prisma.LeaveStatusTimelineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.LeaveStatusTimelineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` LeaveStatusTimelines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` LeaveStatusTimelines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned LeaveStatusTimelines
  **/
  _count?: true | LeaveStatusTimelineCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: LeaveStatusTimelineMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: LeaveStatusTimelineMaxAggregateInputType
}

export type GetLeaveStatusTimelineAggregateType<T extends LeaveStatusTimelineAggregateArgs> = {
      [P in keyof T & keyof AggregateLeaveStatusTimeline]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLeaveStatusTimeline[P]>
    : Prisma.GetScalarType<T[P], AggregateLeaveStatusTimeline[P]>
}




export type LeaveStatusTimelineGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeaveStatusTimelineWhereInput
  orderBy?: Prisma.LeaveStatusTimelineOrderByWithAggregationInput | Prisma.LeaveStatusTimelineOrderByWithAggregationInput[]
  by: Prisma.LeaveStatusTimelineScalarFieldEnum[] | Prisma.LeaveStatusTimelineScalarFieldEnum
  having?: Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: LeaveStatusTimelineCountAggregateInputType | true
  _min?: LeaveStatusTimelineMinAggregateInputType
  _max?: LeaveStatusTimelineMaxAggregateInputType
}

export type LeaveStatusTimelineGroupByOutputType = {
  id: string
  leaveId: string
  status: $Enums.LeaveStatus
  note: string | null
  changedBy: string | null
  changedAt: Date
  _count: LeaveStatusTimelineCountAggregateOutputType | null
  _min: LeaveStatusTimelineMinAggregateOutputType | null
  _max: LeaveStatusTimelineMaxAggregateOutputType | null
}

type GetLeaveStatusTimelineGroupByPayload<T extends LeaveStatusTimelineGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<LeaveStatusTimelineGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof LeaveStatusTimelineGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], LeaveStatusTimelineGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], LeaveStatusTimelineGroupByOutputType[P]>
      }
    >
  >



export type LeaveStatusTimelineWhereInput = {
  AND?: Prisma.LeaveStatusTimelineWhereInput | Prisma.LeaveStatusTimelineWhereInput[]
  OR?: Prisma.LeaveStatusTimelineWhereInput[]
  NOT?: Prisma.LeaveStatusTimelineWhereInput | Prisma.LeaveStatusTimelineWhereInput[]
  id?: Prisma.StringFilter<"LeaveStatusTimeline"> | string
  leaveId?: Prisma.StringFilter<"LeaveStatusTimeline"> | string
  status?: Prisma.EnumLeaveStatusFilter<"LeaveStatusTimeline"> | $Enums.LeaveStatus
  note?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedBy?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedAt?: Prisma.DateTimeFilter<"LeaveStatusTimeline"> | Date | string
  leave?: Prisma.XOR<Prisma.LeaveScalarRelationFilter, Prisma.LeaveWhereInput>
}

export type LeaveStatusTimelineOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  leaveId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  changedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  changedAt?: Prisma.SortOrder
  leave?: Prisma.LeaveOrderByWithRelationInput
  _relevance?: Prisma.LeaveStatusTimelineOrderByRelevanceInput
}

export type LeaveStatusTimelineWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.LeaveStatusTimelineWhereInput | Prisma.LeaveStatusTimelineWhereInput[]
  OR?: Prisma.LeaveStatusTimelineWhereInput[]
  NOT?: Prisma.LeaveStatusTimelineWhereInput | Prisma.LeaveStatusTimelineWhereInput[]
  leaveId?: Prisma.StringFilter<"LeaveStatusTimeline"> | string
  status?: Prisma.EnumLeaveStatusFilter<"LeaveStatusTimeline"> | $Enums.LeaveStatus
  note?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedBy?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedAt?: Prisma.DateTimeFilter<"LeaveStatusTimeline"> | Date | string
  leave?: Prisma.XOR<Prisma.LeaveScalarRelationFilter, Prisma.LeaveWhereInput>
}, "id">

export type LeaveStatusTimelineOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  leaveId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  changedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  changedAt?: Prisma.SortOrder
  _count?: Prisma.LeaveStatusTimelineCountOrderByAggregateInput
  _max?: Prisma.LeaveStatusTimelineMaxOrderByAggregateInput
  _min?: Prisma.LeaveStatusTimelineMinOrderByAggregateInput
}

export type LeaveStatusTimelineScalarWhereWithAggregatesInput = {
  AND?: Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput | Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput[]
  OR?: Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput[]
  NOT?: Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput | Prisma.LeaveStatusTimelineScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"LeaveStatusTimeline"> | string
  leaveId?: Prisma.StringWithAggregatesFilter<"LeaveStatusTimeline"> | string
  status?: Prisma.EnumLeaveStatusWithAggregatesFilter<"LeaveStatusTimeline"> | $Enums.LeaveStatus
  note?: Prisma.StringNullableWithAggregatesFilter<"LeaveStatusTimeline"> | string | null
  changedBy?: Prisma.StringNullableWithAggregatesFilter<"LeaveStatusTimeline"> | string | null
  changedAt?: Prisma.DateTimeWithAggregatesFilter<"LeaveStatusTimeline"> | Date | string
}

export type LeaveStatusTimelineCreateInput = {
  id?: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
  leave: Prisma.LeaveCreateNestedOneWithoutStatusTimelineInput
}

export type LeaveStatusTimelineUncheckedCreateInput = {
  id?: string
  leaveId: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
}

export type LeaveStatusTimelineUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  leave?: Prisma.LeaveUpdateOneRequiredWithoutStatusTimelineNestedInput
}

export type LeaveStatusTimelineUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  leaveId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LeaveStatusTimelineCreateManyInput = {
  id?: string
  leaveId: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
}

export type LeaveStatusTimelineUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LeaveStatusTimelineUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  leaveId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LeaveStatusTimelineListRelationFilter = {
  every?: Prisma.LeaveStatusTimelineWhereInput
  some?: Prisma.LeaveStatusTimelineWhereInput
  none?: Prisma.LeaveStatusTimelineWhereInput
}

export type LeaveStatusTimelineOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type LeaveStatusTimelineOrderByRelevanceInput = {
  fields: Prisma.LeaveStatusTimelineOrderByRelevanceFieldEnum | Prisma.LeaveStatusTimelineOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type LeaveStatusTimelineCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  leaveId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  note?: Prisma.SortOrder
  changedBy?: Prisma.SortOrder
  changedAt?: Prisma.SortOrder
}

export type LeaveStatusTimelineMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  leaveId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  note?: Prisma.SortOrder
  changedBy?: Prisma.SortOrder
  changedAt?: Prisma.SortOrder
}

export type LeaveStatusTimelineMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  leaveId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  note?: Prisma.SortOrder
  changedBy?: Prisma.SortOrder
  changedAt?: Prisma.SortOrder
}

export type LeaveStatusTimelineCreateNestedManyWithoutLeaveInput = {
  create?: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput> | Prisma.LeaveStatusTimelineCreateWithoutLeaveInput[] | Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput[]
  connectOrCreate?: Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput | Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput[]
  createMany?: Prisma.LeaveStatusTimelineCreateManyLeaveInputEnvelope
  connect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
}

export type LeaveStatusTimelineUncheckedCreateNestedManyWithoutLeaveInput = {
  create?: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput> | Prisma.LeaveStatusTimelineCreateWithoutLeaveInput[] | Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput[]
  connectOrCreate?: Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput | Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput[]
  createMany?: Prisma.LeaveStatusTimelineCreateManyLeaveInputEnvelope
  connect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
}

export type LeaveStatusTimelineUpdateManyWithoutLeaveNestedInput = {
  create?: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput> | Prisma.LeaveStatusTimelineCreateWithoutLeaveInput[] | Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput[]
  connectOrCreate?: Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput | Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput[]
  upsert?: Prisma.LeaveStatusTimelineUpsertWithWhereUniqueWithoutLeaveInput | Prisma.LeaveStatusTimelineUpsertWithWhereUniqueWithoutLeaveInput[]
  createMany?: Prisma.LeaveStatusTimelineCreateManyLeaveInputEnvelope
  set?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  disconnect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  delete?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  connect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  update?: Prisma.LeaveStatusTimelineUpdateWithWhereUniqueWithoutLeaveInput | Prisma.LeaveStatusTimelineUpdateWithWhereUniqueWithoutLeaveInput[]
  updateMany?: Prisma.LeaveStatusTimelineUpdateManyWithWhereWithoutLeaveInput | Prisma.LeaveStatusTimelineUpdateManyWithWhereWithoutLeaveInput[]
  deleteMany?: Prisma.LeaveStatusTimelineScalarWhereInput | Prisma.LeaveStatusTimelineScalarWhereInput[]
}

export type LeaveStatusTimelineUncheckedUpdateManyWithoutLeaveNestedInput = {
  create?: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput> | Prisma.LeaveStatusTimelineCreateWithoutLeaveInput[] | Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput[]
  connectOrCreate?: Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput | Prisma.LeaveStatusTimelineCreateOrConnectWithoutLeaveInput[]
  upsert?: Prisma.LeaveStatusTimelineUpsertWithWhereUniqueWithoutLeaveInput | Prisma.LeaveStatusTimelineUpsertWithWhereUniqueWithoutLeaveInput[]
  createMany?: Prisma.LeaveStatusTimelineCreateManyLeaveInputEnvelope
  set?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  disconnect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  delete?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  connect?: Prisma.LeaveStatusTimelineWhereUniqueInput | Prisma.LeaveStatusTimelineWhereUniqueInput[]
  update?: Prisma.LeaveStatusTimelineUpdateWithWhereUniqueWithoutLeaveInput | Prisma.LeaveStatusTimelineUpdateWithWhereUniqueWithoutLeaveInput[]
  updateMany?: Prisma.LeaveStatusTimelineUpdateManyWithWhereWithoutLeaveInput | Prisma.LeaveStatusTimelineUpdateManyWithWhereWithoutLeaveInput[]
  deleteMany?: Prisma.LeaveStatusTimelineScalarWhereInput | Prisma.LeaveStatusTimelineScalarWhereInput[]
}

export type LeaveStatusTimelineCreateWithoutLeaveInput = {
  id?: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
}

export type LeaveStatusTimelineUncheckedCreateWithoutLeaveInput = {
  id?: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
}

export type LeaveStatusTimelineCreateOrConnectWithoutLeaveInput = {
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
  create: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput>
}

export type LeaveStatusTimelineCreateManyLeaveInputEnvelope = {
  data: Prisma.LeaveStatusTimelineCreateManyLeaveInput | Prisma.LeaveStatusTimelineCreateManyLeaveInput[]
  skipDuplicates?: boolean
}

export type LeaveStatusTimelineUpsertWithWhereUniqueWithoutLeaveInput = {
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
  update: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedUpdateWithoutLeaveInput>
  create: Prisma.XOR<Prisma.LeaveStatusTimelineCreateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedCreateWithoutLeaveInput>
}

export type LeaveStatusTimelineUpdateWithWhereUniqueWithoutLeaveInput = {
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
  data: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateWithoutLeaveInput, Prisma.LeaveStatusTimelineUncheckedUpdateWithoutLeaveInput>
}

export type LeaveStatusTimelineUpdateManyWithWhereWithoutLeaveInput = {
  where: Prisma.LeaveStatusTimelineScalarWhereInput
  data: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateManyMutationInput, Prisma.LeaveStatusTimelineUncheckedUpdateManyWithoutLeaveInput>
}

export type LeaveStatusTimelineScalarWhereInput = {
  AND?: Prisma.LeaveStatusTimelineScalarWhereInput | Prisma.LeaveStatusTimelineScalarWhereInput[]
  OR?: Prisma.LeaveStatusTimelineScalarWhereInput[]
  NOT?: Prisma.LeaveStatusTimelineScalarWhereInput | Prisma.LeaveStatusTimelineScalarWhereInput[]
  id?: Prisma.StringFilter<"LeaveStatusTimeline"> | string
  leaveId?: Prisma.StringFilter<"LeaveStatusTimeline"> | string
  status?: Prisma.EnumLeaveStatusFilter<"LeaveStatusTimeline"> | $Enums.LeaveStatus
  note?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedBy?: Prisma.StringNullableFilter<"LeaveStatusTimeline"> | string | null
  changedAt?: Prisma.DateTimeFilter<"LeaveStatusTimeline"> | Date | string
}

export type LeaveStatusTimelineCreateManyLeaveInput = {
  id?: string
  status?: $Enums.LeaveStatus
  note?: string | null
  changedBy?: string | null
  changedAt?: Date | string
}

export type LeaveStatusTimelineUpdateWithoutLeaveInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LeaveStatusTimelineUncheckedUpdateWithoutLeaveInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LeaveStatusTimelineUncheckedUpdateManyWithoutLeaveInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumLeaveStatusFieldUpdateOperationsInput | $Enums.LeaveStatus
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type LeaveStatusTimelineSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  leaveId?: boolean
  status?: boolean
  note?: boolean
  changedBy?: boolean
  changedAt?: boolean
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}, ExtArgs["result"]["leaveStatusTimeline"]>

export type LeaveStatusTimelineSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  leaveId?: boolean
  status?: boolean
  note?: boolean
  changedBy?: boolean
  changedAt?: boolean
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}, ExtArgs["result"]["leaveStatusTimeline"]>

export type LeaveStatusTimelineSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  leaveId?: boolean
  status?: boolean
  note?: boolean
  changedBy?: boolean
  changedAt?: boolean
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}, ExtArgs["result"]["leaveStatusTimeline"]>

export type LeaveStatusTimelineSelectScalar = {
  id?: boolean
  leaveId?: boolean
  status?: boolean
  note?: boolean
  changedBy?: boolean
  changedAt?: boolean
}

export type LeaveStatusTimelineOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "leaveId" | "status" | "note" | "changedBy" | "changedAt", ExtArgs["result"]["leaveStatusTimeline"]>
export type LeaveStatusTimelineInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}
export type LeaveStatusTimelineIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}
export type LeaveStatusTimelineIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  leave?: boolean | Prisma.LeaveDefaultArgs<ExtArgs>
}

export type $LeaveStatusTimelinePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "LeaveStatusTimeline"
  objects: {
    leave: Prisma.$LeavePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    leaveId: string
    status: $Enums.LeaveStatus
    note: string | null
    changedBy: string | null
    changedAt: Date
  }, ExtArgs["result"]["leaveStatusTimeline"]>
  composites: {}
}

export type LeaveStatusTimelineGetPayload<S extends boolean | null | undefined | LeaveStatusTimelineDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload, S>

export type LeaveStatusTimelineCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<LeaveStatusTimelineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: LeaveStatusTimelineCountAggregateInputType | true
  }

export interface LeaveStatusTimelineDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LeaveStatusTimeline'], meta: { name: 'LeaveStatusTimeline' } }
  /**
   * Find zero or one LeaveStatusTimeline that matches the filter.
   * @param {LeaveStatusTimelineFindUniqueArgs} args - Arguments to find a LeaveStatusTimeline
   * @example
   * // Get one LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends LeaveStatusTimelineFindUniqueArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineFindUniqueArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one LeaveStatusTimeline that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {LeaveStatusTimelineFindUniqueOrThrowArgs} args - Arguments to find a LeaveStatusTimeline
   * @example
   * // Get one LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends LeaveStatusTimelineFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first LeaveStatusTimeline that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineFindFirstArgs} args - Arguments to find a LeaveStatusTimeline
   * @example
   * // Get one LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends LeaveStatusTimelineFindFirstArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineFindFirstArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first LeaveStatusTimeline that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineFindFirstOrThrowArgs} args - Arguments to find a LeaveStatusTimeline
   * @example
   * // Get one LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends LeaveStatusTimelineFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more LeaveStatusTimelines that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all LeaveStatusTimelines
   * const leaveStatusTimelines = await prisma.leaveStatusTimeline.findMany()
   * 
   * // Get first 10 LeaveStatusTimelines
   * const leaveStatusTimelines = await prisma.leaveStatusTimeline.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const leaveStatusTimelineWithIdOnly = await prisma.leaveStatusTimeline.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends LeaveStatusTimelineFindManyArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a LeaveStatusTimeline.
   * @param {LeaveStatusTimelineCreateArgs} args - Arguments to create a LeaveStatusTimeline.
   * @example
   * // Create one LeaveStatusTimeline
   * const LeaveStatusTimeline = await prisma.leaveStatusTimeline.create({
   *   data: {
   *     // ... data to create a LeaveStatusTimeline
   *   }
   * })
   * 
   */
  create<T extends LeaveStatusTimelineCreateArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineCreateArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many LeaveStatusTimelines.
   * @param {LeaveStatusTimelineCreateManyArgs} args - Arguments to create many LeaveStatusTimelines.
   * @example
   * // Create many LeaveStatusTimelines
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends LeaveStatusTimelineCreateManyArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many LeaveStatusTimelines and returns the data saved in the database.
   * @param {LeaveStatusTimelineCreateManyAndReturnArgs} args - Arguments to create many LeaveStatusTimelines.
   * @example
   * // Create many LeaveStatusTimelines
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many LeaveStatusTimelines and only return the `id`
   * const leaveStatusTimelineWithIdOnly = await prisma.leaveStatusTimeline.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends LeaveStatusTimelineCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a LeaveStatusTimeline.
   * @param {LeaveStatusTimelineDeleteArgs} args - Arguments to delete one LeaveStatusTimeline.
   * @example
   * // Delete one LeaveStatusTimeline
   * const LeaveStatusTimeline = await prisma.leaveStatusTimeline.delete({
   *   where: {
   *     // ... filter to delete one LeaveStatusTimeline
   *   }
   * })
   * 
   */
  delete<T extends LeaveStatusTimelineDeleteArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineDeleteArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one LeaveStatusTimeline.
   * @param {LeaveStatusTimelineUpdateArgs} args - Arguments to update one LeaveStatusTimeline.
   * @example
   * // Update one LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends LeaveStatusTimelineUpdateArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineUpdateArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more LeaveStatusTimelines.
   * @param {LeaveStatusTimelineDeleteManyArgs} args - Arguments to filter LeaveStatusTimelines to delete.
   * @example
   * // Delete a few LeaveStatusTimelines
   * const { count } = await prisma.leaveStatusTimeline.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends LeaveStatusTimelineDeleteManyArgs>(args?: Prisma.SelectSubset<T, LeaveStatusTimelineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more LeaveStatusTimelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many LeaveStatusTimelines
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends LeaveStatusTimelineUpdateManyArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more LeaveStatusTimelines and returns the data updated in the database.
   * @param {LeaveStatusTimelineUpdateManyAndReturnArgs} args - Arguments to update many LeaveStatusTimelines.
   * @example
   * // Update many LeaveStatusTimelines
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more LeaveStatusTimelines and only return the `id`
   * const leaveStatusTimelineWithIdOnly = await prisma.leaveStatusTimeline.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends LeaveStatusTimelineUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one LeaveStatusTimeline.
   * @param {LeaveStatusTimelineUpsertArgs} args - Arguments to update or create a LeaveStatusTimeline.
   * @example
   * // Update or create a LeaveStatusTimeline
   * const leaveStatusTimeline = await prisma.leaveStatusTimeline.upsert({
   *   create: {
   *     // ... data to create a LeaveStatusTimeline
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the LeaveStatusTimeline we want to update
   *   }
   * })
   */
  upsert<T extends LeaveStatusTimelineUpsertArgs>(args: Prisma.SelectSubset<T, LeaveStatusTimelineUpsertArgs<ExtArgs>>): Prisma.Prisma__LeaveStatusTimelineClient<runtime.Types.Result.GetResult<Prisma.$LeaveStatusTimelinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of LeaveStatusTimelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineCountArgs} args - Arguments to filter LeaveStatusTimelines to count.
   * @example
   * // Count the number of LeaveStatusTimelines
   * const count = await prisma.leaveStatusTimeline.count({
   *   where: {
   *     // ... the filter for the LeaveStatusTimelines we want to count
   *   }
   * })
  **/
  count<T extends LeaveStatusTimelineCountArgs>(
    args?: Prisma.Subset<T, LeaveStatusTimelineCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], LeaveStatusTimelineCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a LeaveStatusTimeline.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends LeaveStatusTimelineAggregateArgs>(args: Prisma.Subset<T, LeaveStatusTimelineAggregateArgs>): Prisma.PrismaPromise<GetLeaveStatusTimelineAggregateType<T>>

  /**
   * Group by LeaveStatusTimeline.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaveStatusTimelineGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends LeaveStatusTimelineGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: LeaveStatusTimelineGroupByArgs['orderBy'] }
      : { orderBy?: LeaveStatusTimelineGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, LeaveStatusTimelineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeaveStatusTimelineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the LeaveStatusTimeline model
 */
readonly fields: LeaveStatusTimelineFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for LeaveStatusTimeline.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__LeaveStatusTimelineClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  leave<T extends Prisma.LeaveDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.LeaveDefaultArgs<ExtArgs>>): Prisma.Prisma__LeaveClient<runtime.Types.Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the LeaveStatusTimeline model
 */
export interface LeaveStatusTimelineFieldRefs {
  readonly id: Prisma.FieldRef<"LeaveStatusTimeline", 'String'>
  readonly leaveId: Prisma.FieldRef<"LeaveStatusTimeline", 'String'>
  readonly status: Prisma.FieldRef<"LeaveStatusTimeline", 'LeaveStatus'>
  readonly note: Prisma.FieldRef<"LeaveStatusTimeline", 'String'>
  readonly changedBy: Prisma.FieldRef<"LeaveStatusTimeline", 'String'>
  readonly changedAt: Prisma.FieldRef<"LeaveStatusTimeline", 'DateTime'>
}
    

// Custom InputTypes
/**
 * LeaveStatusTimeline findUnique
 */
export type LeaveStatusTimelineFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter, which LeaveStatusTimeline to fetch.
   */
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
}

/**
 * LeaveStatusTimeline findUniqueOrThrow
 */
export type LeaveStatusTimelineFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter, which LeaveStatusTimeline to fetch.
   */
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
}

/**
 * LeaveStatusTimeline findFirst
 */
export type LeaveStatusTimelineFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter, which LeaveStatusTimeline to fetch.
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of LeaveStatusTimelines to fetch.
   */
  orderBy?: Prisma.LeaveStatusTimelineOrderByWithRelationInput | Prisma.LeaveStatusTimelineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for LeaveStatusTimelines.
   */
  cursor?: Prisma.LeaveStatusTimelineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` LeaveStatusTimelines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` LeaveStatusTimelines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of LeaveStatusTimelines.
   */
  distinct?: Prisma.LeaveStatusTimelineScalarFieldEnum | Prisma.LeaveStatusTimelineScalarFieldEnum[]
}

/**
 * LeaveStatusTimeline findFirstOrThrow
 */
export type LeaveStatusTimelineFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter, which LeaveStatusTimeline to fetch.
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of LeaveStatusTimelines to fetch.
   */
  orderBy?: Prisma.LeaveStatusTimelineOrderByWithRelationInput | Prisma.LeaveStatusTimelineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for LeaveStatusTimelines.
   */
  cursor?: Prisma.LeaveStatusTimelineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` LeaveStatusTimelines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` LeaveStatusTimelines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of LeaveStatusTimelines.
   */
  distinct?: Prisma.LeaveStatusTimelineScalarFieldEnum | Prisma.LeaveStatusTimelineScalarFieldEnum[]
}

/**
 * LeaveStatusTimeline findMany
 */
export type LeaveStatusTimelineFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter, which LeaveStatusTimelines to fetch.
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of LeaveStatusTimelines to fetch.
   */
  orderBy?: Prisma.LeaveStatusTimelineOrderByWithRelationInput | Prisma.LeaveStatusTimelineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing LeaveStatusTimelines.
   */
  cursor?: Prisma.LeaveStatusTimelineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` LeaveStatusTimelines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` LeaveStatusTimelines.
   */
  skip?: number
  distinct?: Prisma.LeaveStatusTimelineScalarFieldEnum | Prisma.LeaveStatusTimelineScalarFieldEnum[]
}

/**
 * LeaveStatusTimeline create
 */
export type LeaveStatusTimelineCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * The data needed to create a LeaveStatusTimeline.
   */
  data: Prisma.XOR<Prisma.LeaveStatusTimelineCreateInput, Prisma.LeaveStatusTimelineUncheckedCreateInput>
}

/**
 * LeaveStatusTimeline createMany
 */
export type LeaveStatusTimelineCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many LeaveStatusTimelines.
   */
  data: Prisma.LeaveStatusTimelineCreateManyInput | Prisma.LeaveStatusTimelineCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * LeaveStatusTimeline createManyAndReturn
 */
export type LeaveStatusTimelineCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * The data used to create many LeaveStatusTimelines.
   */
  data: Prisma.LeaveStatusTimelineCreateManyInput | Prisma.LeaveStatusTimelineCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * LeaveStatusTimeline update
 */
export type LeaveStatusTimelineUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * The data needed to update a LeaveStatusTimeline.
   */
  data: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateInput, Prisma.LeaveStatusTimelineUncheckedUpdateInput>
  /**
   * Choose, which LeaveStatusTimeline to update.
   */
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
}

/**
 * LeaveStatusTimeline updateMany
 */
export type LeaveStatusTimelineUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update LeaveStatusTimelines.
   */
  data: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateManyMutationInput, Prisma.LeaveStatusTimelineUncheckedUpdateManyInput>
  /**
   * Filter which LeaveStatusTimelines to update
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * Limit how many LeaveStatusTimelines to update.
   */
  limit?: number
}

/**
 * LeaveStatusTimeline updateManyAndReturn
 */
export type LeaveStatusTimelineUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * The data used to update LeaveStatusTimelines.
   */
  data: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateManyMutationInput, Prisma.LeaveStatusTimelineUncheckedUpdateManyInput>
  /**
   * Filter which LeaveStatusTimelines to update
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * Limit how many LeaveStatusTimelines to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * LeaveStatusTimeline upsert
 */
export type LeaveStatusTimelineUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * The filter to search for the LeaveStatusTimeline to update in case it exists.
   */
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
  /**
   * In case the LeaveStatusTimeline found by the `where` argument doesn't exist, create a new LeaveStatusTimeline with this data.
   */
  create: Prisma.XOR<Prisma.LeaveStatusTimelineCreateInput, Prisma.LeaveStatusTimelineUncheckedCreateInput>
  /**
   * In case the LeaveStatusTimeline was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.LeaveStatusTimelineUpdateInput, Prisma.LeaveStatusTimelineUncheckedUpdateInput>
}

/**
 * LeaveStatusTimeline delete
 */
export type LeaveStatusTimelineDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
  /**
   * Filter which LeaveStatusTimeline to delete.
   */
  where: Prisma.LeaveStatusTimelineWhereUniqueInput
}

/**
 * LeaveStatusTimeline deleteMany
 */
export type LeaveStatusTimelineDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which LeaveStatusTimelines to delete
   */
  where?: Prisma.LeaveStatusTimelineWhereInput
  /**
   * Limit how many LeaveStatusTimelines to delete.
   */
  limit?: number
}

/**
 * LeaveStatusTimeline without action
 */
export type LeaveStatusTimelineDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaveStatusTimeline
   */
  select?: Prisma.LeaveStatusTimelineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaveStatusTimeline
   */
  omit?: Prisma.LeaveStatusTimelineOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaveStatusTimelineInclude<ExtArgs> | null
}
