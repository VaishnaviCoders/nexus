
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `StudentDocument` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model StudentDocument
 * 
 */
export type StudentDocumentModel = runtime.Types.Result.DefaultSelection<Prisma.$StudentDocumentPayload>

export type AggregateStudentDocument = {
  _count: StudentDocumentCountAggregateOutputType | null
  _avg: StudentDocumentAvgAggregateOutputType | null
  _sum: StudentDocumentSumAggregateOutputType | null
  _min: StudentDocumentMinAggregateOutputType | null
  _max: StudentDocumentMaxAggregateOutputType | null
}

export type StudentDocumentAvgAggregateOutputType = {
  fileSize: number | null
}

export type StudentDocumentSumAggregateOutputType = {
  fileSize: number | null
}

export type StudentDocumentMinAggregateOutputType = {
  id: string | null
  type: $Enums.DocumentType | null
  fileName: string | null
  fileSize: number | null
  fileType: string | null
  documentUrl: string | null
  studentId: string | null
  verified: boolean | null
  verifiedBy: string | null
  verifiedAt: Date | null
  rejected: boolean | null
  rejectedBy: string | null
  rejectedAt: Date | null
  rejectReason: string | null
  uploadedBy: string | null
  uploadedAt: Date | null
  note: string | null
  isDeleted: boolean | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
  organizationId: string | null
}

export type StudentDocumentMaxAggregateOutputType = {
  id: string | null
  type: $Enums.DocumentType | null
  fileName: string | null
  fileSize: number | null
  fileType: string | null
  documentUrl: string | null
  studentId: string | null
  verified: boolean | null
  verifiedBy: string | null
  verifiedAt: Date | null
  rejected: boolean | null
  rejectedBy: string | null
  rejectedAt: Date | null
  rejectReason: string | null
  uploadedBy: string | null
  uploadedAt: Date | null
  note: string | null
  isDeleted: boolean | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
  organizationId: string | null
}

export type StudentDocumentCountAggregateOutputType = {
  id: number
  type: number
  fileName: number
  fileSize: number
  fileType: number
  documentUrl: number
  studentId: number
  verified: number
  verifiedBy: number
  verifiedAt: number
  rejected: number
  rejectedBy: number
  rejectedAt: number
  rejectReason: number
  uploadedBy: number
  uploadedAt: number
  note: number
  isDeleted: number
  deletedAt: number
  createdAt: number
  updatedAt: number
  organizationId: number
  _all: number
}


export type StudentDocumentAvgAggregateInputType = {
  fileSize?: true
}

export type StudentDocumentSumAggregateInputType = {
  fileSize?: true
}

export type StudentDocumentMinAggregateInputType = {
  id?: true
  type?: true
  fileName?: true
  fileSize?: true
  fileType?: true
  documentUrl?: true
  studentId?: true
  verified?: true
  verifiedBy?: true
  verifiedAt?: true
  rejected?: true
  rejectedBy?: true
  rejectedAt?: true
  rejectReason?: true
  uploadedBy?: true
  uploadedAt?: true
  note?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
}

export type StudentDocumentMaxAggregateInputType = {
  id?: true
  type?: true
  fileName?: true
  fileSize?: true
  fileType?: true
  documentUrl?: true
  studentId?: true
  verified?: true
  verifiedBy?: true
  verifiedAt?: true
  rejected?: true
  rejectedBy?: true
  rejectedAt?: true
  rejectReason?: true
  uploadedBy?: true
  uploadedAt?: true
  note?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
}

export type StudentDocumentCountAggregateInputType = {
  id?: true
  type?: true
  fileName?: true
  fileSize?: true
  fileType?: true
  documentUrl?: true
  studentId?: true
  verified?: true
  verifiedBy?: true
  verifiedAt?: true
  rejected?: true
  rejectedBy?: true
  rejectedAt?: true
  rejectReason?: true
  uploadedBy?: true
  uploadedAt?: true
  note?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
  organizationId?: true
  _all?: true
}

export type StudentDocumentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentDocument to aggregate.
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentDocuments to fetch.
   */
  orderBy?: Prisma.StudentDocumentOrderByWithRelationInput | Prisma.StudentDocumentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StudentDocumentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentDocuments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentDocuments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned StudentDocuments
  **/
  _count?: true | StudentDocumentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: StudentDocumentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: StudentDocumentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StudentDocumentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StudentDocumentMaxAggregateInputType
}

export type GetStudentDocumentAggregateType<T extends StudentDocumentAggregateArgs> = {
      [P in keyof T & keyof AggregateStudentDocument]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStudentDocument[P]>
    : Prisma.GetScalarType<T[P], AggregateStudentDocument[P]>
}




export type StudentDocumentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentDocumentWhereInput
  orderBy?: Prisma.StudentDocumentOrderByWithAggregationInput | Prisma.StudentDocumentOrderByWithAggregationInput[]
  by: Prisma.StudentDocumentScalarFieldEnum[] | Prisma.StudentDocumentScalarFieldEnum
  having?: Prisma.StudentDocumentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StudentDocumentCountAggregateInputType | true
  _avg?: StudentDocumentAvgAggregateInputType
  _sum?: StudentDocumentSumAggregateInputType
  _min?: StudentDocumentMinAggregateInputType
  _max?: StudentDocumentMaxAggregateInputType
}

export type StudentDocumentGroupByOutputType = {
  id: string
  type: $Enums.DocumentType
  fileName: string | null
  fileSize: number | null
  fileType: string | null
  documentUrl: string
  studentId: string
  verified: boolean
  verifiedBy: string | null
  verifiedAt: Date | null
  rejected: boolean
  rejectedBy: string | null
  rejectedAt: Date | null
  rejectReason: string | null
  uploadedBy: string | null
  uploadedAt: Date
  note: string | null
  isDeleted: boolean
  deletedAt: Date | null
  createdAt: Date
  updatedAt: Date
  organizationId: string
  _count: StudentDocumentCountAggregateOutputType | null
  _avg: StudentDocumentAvgAggregateOutputType | null
  _sum: StudentDocumentSumAggregateOutputType | null
  _min: StudentDocumentMinAggregateOutputType | null
  _max: StudentDocumentMaxAggregateOutputType | null
}

type GetStudentDocumentGroupByPayload<T extends StudentDocumentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StudentDocumentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StudentDocumentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StudentDocumentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StudentDocumentGroupByOutputType[P]>
      }
    >
  >



export type StudentDocumentWhereInput = {
  AND?: Prisma.StudentDocumentWhereInput | Prisma.StudentDocumentWhereInput[]
  OR?: Prisma.StudentDocumentWhereInput[]
  NOT?: Prisma.StudentDocumentWhereInput | Prisma.StudentDocumentWhereInput[]
  id?: Prisma.StringFilter<"StudentDocument"> | string
  type?: Prisma.EnumDocumentTypeFilter<"StudentDocument"> | $Enums.DocumentType
  fileName?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  fileSize?: Prisma.IntNullableFilter<"StudentDocument"> | number | null
  fileType?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  documentUrl?: Prisma.StringFilter<"StudentDocument"> | string
  studentId?: Prisma.StringFilter<"StudentDocument"> | string
  verified?: Prisma.BoolFilter<"StudentDocument"> | boolean
  verifiedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  verifiedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejected?: Prisma.BoolFilter<"StudentDocument"> | boolean
  rejectedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  rejectedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejectReason?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  note?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  isDeleted?: Prisma.BoolFilter<"StudentDocument"> | boolean
  deletedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  organizationId?: Prisma.StringFilter<"StudentDocument"> | string
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  Organization?: Prisma.XOR<Prisma.OrganizationNullableScalarRelationFilter, Prisma.OrganizationWhereInput> | null
}

export type StudentDocumentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  fileName?: Prisma.SortOrderInput | Prisma.SortOrder
  fileSize?: Prisma.SortOrderInput | Prisma.SortOrder
  fileType?: Prisma.SortOrderInput | Prisma.SortOrder
  documentUrl?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  verifiedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  verifiedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  rejected?: Prisma.SortOrder
  rejectedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  rejectedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  rejectReason?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedAt?: Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  student?: Prisma.StudentOrderByWithRelationInput
  Organization?: Prisma.OrganizationOrderByWithRelationInput
  _relevance?: Prisma.StudentDocumentOrderByRelevanceInput
}

export type StudentDocumentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.StudentDocumentWhereInput | Prisma.StudentDocumentWhereInput[]
  OR?: Prisma.StudentDocumentWhereInput[]
  NOT?: Prisma.StudentDocumentWhereInput | Prisma.StudentDocumentWhereInput[]
  type?: Prisma.EnumDocumentTypeFilter<"StudentDocument"> | $Enums.DocumentType
  fileName?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  fileSize?: Prisma.IntNullableFilter<"StudentDocument"> | number | null
  fileType?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  documentUrl?: Prisma.StringFilter<"StudentDocument"> | string
  studentId?: Prisma.StringFilter<"StudentDocument"> | string
  verified?: Prisma.BoolFilter<"StudentDocument"> | boolean
  verifiedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  verifiedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejected?: Prisma.BoolFilter<"StudentDocument"> | boolean
  rejectedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  rejectedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejectReason?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  note?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  isDeleted?: Prisma.BoolFilter<"StudentDocument"> | boolean
  deletedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  organizationId?: Prisma.StringFilter<"StudentDocument"> | string
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  Organization?: Prisma.XOR<Prisma.OrganizationNullableScalarRelationFilter, Prisma.OrganizationWhereInput> | null
}, "id">

export type StudentDocumentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  fileName?: Prisma.SortOrderInput | Prisma.SortOrder
  fileSize?: Prisma.SortOrderInput | Prisma.SortOrder
  fileType?: Prisma.SortOrderInput | Prisma.SortOrder
  documentUrl?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  verifiedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  verifiedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  rejected?: Prisma.SortOrder
  rejectedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  rejectedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  rejectReason?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedAt?: Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  _count?: Prisma.StudentDocumentCountOrderByAggregateInput
  _avg?: Prisma.StudentDocumentAvgOrderByAggregateInput
  _max?: Prisma.StudentDocumentMaxOrderByAggregateInput
  _min?: Prisma.StudentDocumentMinOrderByAggregateInput
  _sum?: Prisma.StudentDocumentSumOrderByAggregateInput
}

export type StudentDocumentScalarWhereWithAggregatesInput = {
  AND?: Prisma.StudentDocumentScalarWhereWithAggregatesInput | Prisma.StudentDocumentScalarWhereWithAggregatesInput[]
  OR?: Prisma.StudentDocumentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StudentDocumentScalarWhereWithAggregatesInput | Prisma.StudentDocumentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"StudentDocument"> | string
  type?: Prisma.EnumDocumentTypeWithAggregatesFilter<"StudentDocument"> | $Enums.DocumentType
  fileName?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  fileSize?: Prisma.IntNullableWithAggregatesFilter<"StudentDocument"> | number | null
  fileType?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  documentUrl?: Prisma.StringWithAggregatesFilter<"StudentDocument"> | string
  studentId?: Prisma.StringWithAggregatesFilter<"StudentDocument"> | string
  verified?: Prisma.BoolWithAggregatesFilter<"StudentDocument"> | boolean
  verifiedBy?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  verifiedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"StudentDocument"> | Date | string | null
  rejected?: Prisma.BoolWithAggregatesFilter<"StudentDocument"> | boolean
  rejectedBy?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  rejectedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"StudentDocument"> | Date | string | null
  rejectReason?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  uploadedBy?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  uploadedAt?: Prisma.DateTimeWithAggregatesFilter<"StudentDocument"> | Date | string
  note?: Prisma.StringNullableWithAggregatesFilter<"StudentDocument"> | string | null
  isDeleted?: Prisma.BoolWithAggregatesFilter<"StudentDocument"> | boolean
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"StudentDocument"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"StudentDocument"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"StudentDocument"> | Date | string
  organizationId?: Prisma.StringWithAggregatesFilter<"StudentDocument"> | string
}

export type StudentDocumentCreateInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  student: Prisma.StudentCreateNestedOneWithoutStudentDocumentInput
  Organization?: Prisma.OrganizationCreateNestedOneWithoutStudentDocumentInput
}

export type StudentDocumentUncheckedCreateInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  studentId: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type StudentDocumentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  student?: Prisma.StudentUpdateOneRequiredWithoutStudentDocumentNestedInput
  Organization?: Prisma.OrganizationUpdateOneWithoutStudentDocumentNestedInput
}

export type StudentDocumentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type StudentDocumentCreateManyInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  studentId: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type StudentDocumentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentDocumentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type StudentDocumentListRelationFilter = {
  every?: Prisma.StudentDocumentWhereInput
  some?: Prisma.StudentDocumentWhereInput
  none?: Prisma.StudentDocumentWhereInput
}

export type StudentDocumentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StudentDocumentOrderByRelevanceInput = {
  fields: Prisma.StudentDocumentOrderByRelevanceFieldEnum | Prisma.StudentDocumentOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type StudentDocumentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  fileType?: Prisma.SortOrder
  documentUrl?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  verifiedBy?: Prisma.SortOrder
  verifiedAt?: Prisma.SortOrder
  rejected?: Prisma.SortOrder
  rejectedBy?: Prisma.SortOrder
  rejectedAt?: Prisma.SortOrder
  rejectReason?: Prisma.SortOrder
  uploadedBy?: Prisma.SortOrder
  uploadedAt?: Prisma.SortOrder
  note?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type StudentDocumentAvgOrderByAggregateInput = {
  fileSize?: Prisma.SortOrder
}

export type StudentDocumentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  fileType?: Prisma.SortOrder
  documentUrl?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  verifiedBy?: Prisma.SortOrder
  verifiedAt?: Prisma.SortOrder
  rejected?: Prisma.SortOrder
  rejectedBy?: Prisma.SortOrder
  rejectedAt?: Prisma.SortOrder
  rejectReason?: Prisma.SortOrder
  uploadedBy?: Prisma.SortOrder
  uploadedAt?: Prisma.SortOrder
  note?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type StudentDocumentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  fileType?: Prisma.SortOrder
  documentUrl?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  verifiedBy?: Prisma.SortOrder
  verifiedAt?: Prisma.SortOrder
  rejected?: Prisma.SortOrder
  rejectedBy?: Prisma.SortOrder
  rejectedAt?: Prisma.SortOrder
  rejectReason?: Prisma.SortOrder
  uploadedBy?: Prisma.SortOrder
  uploadedAt?: Prisma.SortOrder
  note?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
}

export type StudentDocumentSumOrderByAggregateInput = {
  fileSize?: Prisma.SortOrder
}

export type StudentDocumentCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput> | Prisma.StudentDocumentCreateWithoutOrganizationInput[] | Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput | Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.StudentDocumentCreateManyOrganizationInputEnvelope
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
}

export type StudentDocumentUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput> | Prisma.StudentDocumentCreateWithoutOrganizationInput[] | Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput | Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.StudentDocumentCreateManyOrganizationInputEnvelope
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
}

export type StudentDocumentUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput> | Prisma.StudentDocumentCreateWithoutOrganizationInput[] | Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput | Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.StudentDocumentUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.StudentDocumentUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.StudentDocumentCreateManyOrganizationInputEnvelope
  set?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  disconnect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  delete?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  update?: Prisma.StudentDocumentUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.StudentDocumentUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.StudentDocumentUpdateManyWithWhereWithoutOrganizationInput | Prisma.StudentDocumentUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
}

export type StudentDocumentUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput> | Prisma.StudentDocumentCreateWithoutOrganizationInput[] | Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput | Prisma.StudentDocumentCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.StudentDocumentUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.StudentDocumentUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.StudentDocumentCreateManyOrganizationInputEnvelope
  set?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  disconnect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  delete?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  update?: Prisma.StudentDocumentUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.StudentDocumentUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.StudentDocumentUpdateManyWithWhereWithoutOrganizationInput | Prisma.StudentDocumentUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
}

export type StudentDocumentCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput> | Prisma.StudentDocumentCreateWithoutStudentInput[] | Prisma.StudentDocumentUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutStudentInput | Prisma.StudentDocumentCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentDocumentCreateManyStudentInputEnvelope
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
}

export type StudentDocumentUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput> | Prisma.StudentDocumentCreateWithoutStudentInput[] | Prisma.StudentDocumentUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutStudentInput | Prisma.StudentDocumentCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentDocumentCreateManyStudentInputEnvelope
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
}

export type StudentDocumentUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput> | Prisma.StudentDocumentCreateWithoutStudentInput[] | Prisma.StudentDocumentUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutStudentInput | Prisma.StudentDocumentCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentDocumentUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentDocumentUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentDocumentCreateManyStudentInputEnvelope
  set?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  disconnect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  delete?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  update?: Prisma.StudentDocumentUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentDocumentUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentDocumentUpdateManyWithWhereWithoutStudentInput | Prisma.StudentDocumentUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
}

export type StudentDocumentUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput> | Prisma.StudentDocumentCreateWithoutStudentInput[] | Prisma.StudentDocumentUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentDocumentCreateOrConnectWithoutStudentInput | Prisma.StudentDocumentCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentDocumentUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentDocumentUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentDocumentCreateManyStudentInputEnvelope
  set?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  disconnect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  delete?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  connect?: Prisma.StudentDocumentWhereUniqueInput | Prisma.StudentDocumentWhereUniqueInput[]
  update?: Prisma.StudentDocumentUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentDocumentUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentDocumentUpdateManyWithWhereWithoutStudentInput | Prisma.StudentDocumentUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
}

export type EnumDocumentTypeFieldUpdateOperationsInput = {
  set?: $Enums.DocumentType
}

export type StudentDocumentCreateWithoutOrganizationInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  student: Prisma.StudentCreateNestedOneWithoutStudentDocumentInput
}

export type StudentDocumentUncheckedCreateWithoutOrganizationInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  studentId: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentDocumentCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput>
}

export type StudentDocumentCreateManyOrganizationInputEnvelope = {
  data: Prisma.StudentDocumentCreateManyOrganizationInput | Prisma.StudentDocumentCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type StudentDocumentUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentDocumentUpdateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.StudentDocumentCreateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedCreateWithoutOrganizationInput>
}

export type StudentDocumentUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentDocumentUpdateWithoutOrganizationInput, Prisma.StudentDocumentUncheckedUpdateWithoutOrganizationInput>
}

export type StudentDocumentUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.StudentDocumentScalarWhereInput
  data: Prisma.XOR<Prisma.StudentDocumentUpdateManyMutationInput, Prisma.StudentDocumentUncheckedUpdateManyWithoutOrganizationInput>
}

export type StudentDocumentScalarWhereInput = {
  AND?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
  OR?: Prisma.StudentDocumentScalarWhereInput[]
  NOT?: Prisma.StudentDocumentScalarWhereInput | Prisma.StudentDocumentScalarWhereInput[]
  id?: Prisma.StringFilter<"StudentDocument"> | string
  type?: Prisma.EnumDocumentTypeFilter<"StudentDocument"> | $Enums.DocumentType
  fileName?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  fileSize?: Prisma.IntNullableFilter<"StudentDocument"> | number | null
  fileType?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  documentUrl?: Prisma.StringFilter<"StudentDocument"> | string
  studentId?: Prisma.StringFilter<"StudentDocument"> | string
  verified?: Prisma.BoolFilter<"StudentDocument"> | boolean
  verifiedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  verifiedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejected?: Prisma.BoolFilter<"StudentDocument"> | boolean
  rejectedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  rejectedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  rejectReason?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedBy?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  uploadedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  note?: Prisma.StringNullableFilter<"StudentDocument"> | string | null
  isDeleted?: Prisma.BoolFilter<"StudentDocument"> | boolean
  deletedAt?: Prisma.DateTimeNullableFilter<"StudentDocument"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentDocument"> | Date | string
  organizationId?: Prisma.StringFilter<"StudentDocument"> | string
}

export type StudentDocumentCreateWithoutStudentInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Organization?: Prisma.OrganizationCreateNestedOneWithoutStudentDocumentInput
}

export type StudentDocumentUncheckedCreateWithoutStudentInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type StudentDocumentCreateOrConnectWithoutStudentInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput>
}

export type StudentDocumentCreateManyStudentInputEnvelope = {
  data: Prisma.StudentDocumentCreateManyStudentInput | Prisma.StudentDocumentCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type StudentDocumentUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentDocumentUpdateWithoutStudentInput, Prisma.StudentDocumentUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.StudentDocumentCreateWithoutStudentInput, Prisma.StudentDocumentUncheckedCreateWithoutStudentInput>
}

export type StudentDocumentUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentDocumentWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentDocumentUpdateWithoutStudentInput, Prisma.StudentDocumentUncheckedUpdateWithoutStudentInput>
}

export type StudentDocumentUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.StudentDocumentScalarWhereInput
  data: Prisma.XOR<Prisma.StudentDocumentUpdateManyMutationInput, Prisma.StudentDocumentUncheckedUpdateManyWithoutStudentInput>
}

export type StudentDocumentCreateManyOrganizationInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  studentId: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentDocumentUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  student?: Prisma.StudentUpdateOneRequiredWithoutStudentDocumentNestedInput
}

export type StudentDocumentUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentDocumentUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentDocumentCreateManyStudentInput = {
  id?: string
  type: $Enums.DocumentType
  fileName?: string | null
  fileSize?: number | null
  fileType?: string | null
  documentUrl: string
  verified?: boolean
  verifiedBy?: string | null
  verifiedAt?: Date | string | null
  rejected?: boolean
  rejectedBy?: string | null
  rejectedAt?: Date | string | null
  rejectReason?: string | null
  uploadedBy?: string | null
  uploadedAt?: Date | string
  note?: string | null
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organizationId: string
}

export type StudentDocumentUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Organization?: Prisma.OrganizationUpdateOneWithoutStudentDocumentNestedInput
}

export type StudentDocumentUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type StudentDocumentUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
  fileName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fileSize?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fileType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  documentUrl?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  verifiedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rejectedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  rejectedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  rejectReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
}



export type StudentDocumentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  fileName?: boolean
  fileSize?: boolean
  fileType?: boolean
  documentUrl?: boolean
  studentId?: boolean
  verified?: boolean
  verifiedBy?: boolean
  verifiedAt?: boolean
  rejected?: boolean
  rejectedBy?: boolean
  rejectedAt?: boolean
  rejectReason?: boolean
  uploadedBy?: boolean
  uploadedAt?: boolean
  note?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}, ExtArgs["result"]["studentDocument"]>

export type StudentDocumentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  fileName?: boolean
  fileSize?: boolean
  fileType?: boolean
  documentUrl?: boolean
  studentId?: boolean
  verified?: boolean
  verifiedBy?: boolean
  verifiedAt?: boolean
  rejected?: boolean
  rejectedBy?: boolean
  rejectedAt?: boolean
  rejectReason?: boolean
  uploadedBy?: boolean
  uploadedAt?: boolean
  note?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}, ExtArgs["result"]["studentDocument"]>

export type StudentDocumentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  fileName?: boolean
  fileSize?: boolean
  fileType?: boolean
  documentUrl?: boolean
  studentId?: boolean
  verified?: boolean
  verifiedBy?: boolean
  verifiedAt?: boolean
  rejected?: boolean
  rejectedBy?: boolean
  rejectedAt?: boolean
  rejectReason?: boolean
  uploadedBy?: boolean
  uploadedAt?: boolean
  note?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}, ExtArgs["result"]["studentDocument"]>

export type StudentDocumentSelectScalar = {
  id?: boolean
  type?: boolean
  fileName?: boolean
  fileSize?: boolean
  fileType?: boolean
  documentUrl?: boolean
  studentId?: boolean
  verified?: boolean
  verifiedBy?: boolean
  verifiedAt?: boolean
  rejected?: boolean
  rejectedBy?: boolean
  rejectedAt?: boolean
  rejectReason?: boolean
  uploadedBy?: boolean
  uploadedAt?: boolean
  note?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organizationId?: boolean
}

export type StudentDocumentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type" | "fileName" | "fileSize" | "fileType" | "documentUrl" | "studentId" | "verified" | "verifiedBy" | "verifiedAt" | "rejected" | "rejectedBy" | "rejectedAt" | "rejectReason" | "uploadedBy" | "uploadedAt" | "note" | "isDeleted" | "deletedAt" | "createdAt" | "updatedAt" | "organizationId", ExtArgs["result"]["studentDocument"]>
export type StudentDocumentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}
export type StudentDocumentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}
export type StudentDocumentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  Organization?: boolean | Prisma.StudentDocument$OrganizationArgs<ExtArgs>
}

export type $StudentDocumentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "StudentDocument"
  objects: {
    student: Prisma.$StudentPayload<ExtArgs>
    Organization: Prisma.$OrganizationPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: $Enums.DocumentType
    fileName: string | null
    fileSize: number | null
    fileType: string | null
    documentUrl: string
    studentId: string
    verified: boolean
    verifiedBy: string | null
    verifiedAt: Date | null
    rejected: boolean
    rejectedBy: string | null
    rejectedAt: Date | null
    rejectReason: string | null
    uploadedBy: string | null
    uploadedAt: Date
    note: string | null
    isDeleted: boolean
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    organizationId: string
  }, ExtArgs["result"]["studentDocument"]>
  composites: {}
}

export type StudentDocumentGetPayload<S extends boolean | null | undefined | StudentDocumentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload, S>

export type StudentDocumentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StudentDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StudentDocumentCountAggregateInputType | true
  }

export interface StudentDocumentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StudentDocument'], meta: { name: 'StudentDocument' } }
  /**
   * Find zero or one StudentDocument that matches the filter.
   * @param {StudentDocumentFindUniqueArgs} args - Arguments to find a StudentDocument
   * @example
   * // Get one StudentDocument
   * const studentDocument = await prisma.studentDocument.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StudentDocumentFindUniqueArgs>(args: Prisma.SelectSubset<T, StudentDocumentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one StudentDocument that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StudentDocumentFindUniqueOrThrowArgs} args - Arguments to find a StudentDocument
   * @example
   * // Get one StudentDocument
   * const studentDocument = await prisma.studentDocument.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StudentDocumentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StudentDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentDocument that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentFindFirstArgs} args - Arguments to find a StudentDocument
   * @example
   * // Get one StudentDocument
   * const studentDocument = await prisma.studentDocument.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StudentDocumentFindFirstArgs>(args?: Prisma.SelectSubset<T, StudentDocumentFindFirstArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentDocument that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentFindFirstOrThrowArgs} args - Arguments to find a StudentDocument
   * @example
   * // Get one StudentDocument
   * const studentDocument = await prisma.studentDocument.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StudentDocumentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StudentDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more StudentDocuments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all StudentDocuments
   * const studentDocuments = await prisma.studentDocument.findMany()
   * 
   * // Get first 10 StudentDocuments
   * const studentDocuments = await prisma.studentDocument.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const studentDocumentWithIdOnly = await prisma.studentDocument.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StudentDocumentFindManyArgs>(args?: Prisma.SelectSubset<T, StudentDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a StudentDocument.
   * @param {StudentDocumentCreateArgs} args - Arguments to create a StudentDocument.
   * @example
   * // Create one StudentDocument
   * const StudentDocument = await prisma.studentDocument.create({
   *   data: {
   *     // ... data to create a StudentDocument
   *   }
   * })
   * 
   */
  create<T extends StudentDocumentCreateArgs>(args: Prisma.SelectSubset<T, StudentDocumentCreateArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many StudentDocuments.
   * @param {StudentDocumentCreateManyArgs} args - Arguments to create many StudentDocuments.
   * @example
   * // Create many StudentDocuments
   * const studentDocument = await prisma.studentDocument.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StudentDocumentCreateManyArgs>(args?: Prisma.SelectSubset<T, StudentDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many StudentDocuments and returns the data saved in the database.
   * @param {StudentDocumentCreateManyAndReturnArgs} args - Arguments to create many StudentDocuments.
   * @example
   * // Create many StudentDocuments
   * const studentDocument = await prisma.studentDocument.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many StudentDocuments and only return the `id`
   * const studentDocumentWithIdOnly = await prisma.studentDocument.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StudentDocumentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StudentDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a StudentDocument.
   * @param {StudentDocumentDeleteArgs} args - Arguments to delete one StudentDocument.
   * @example
   * // Delete one StudentDocument
   * const StudentDocument = await prisma.studentDocument.delete({
   *   where: {
   *     // ... filter to delete one StudentDocument
   *   }
   * })
   * 
   */
  delete<T extends StudentDocumentDeleteArgs>(args: Prisma.SelectSubset<T, StudentDocumentDeleteArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one StudentDocument.
   * @param {StudentDocumentUpdateArgs} args - Arguments to update one StudentDocument.
   * @example
   * // Update one StudentDocument
   * const studentDocument = await prisma.studentDocument.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StudentDocumentUpdateArgs>(args: Prisma.SelectSubset<T, StudentDocumentUpdateArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more StudentDocuments.
   * @param {StudentDocumentDeleteManyArgs} args - Arguments to filter StudentDocuments to delete.
   * @example
   * // Delete a few StudentDocuments
   * const { count } = await prisma.studentDocument.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StudentDocumentDeleteManyArgs>(args?: Prisma.SelectSubset<T, StudentDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentDocuments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many StudentDocuments
   * const studentDocument = await prisma.studentDocument.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StudentDocumentUpdateManyArgs>(args: Prisma.SelectSubset<T, StudentDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentDocuments and returns the data updated in the database.
   * @param {StudentDocumentUpdateManyAndReturnArgs} args - Arguments to update many StudentDocuments.
   * @example
   * // Update many StudentDocuments
   * const studentDocument = await prisma.studentDocument.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more StudentDocuments and only return the `id`
   * const studentDocumentWithIdOnly = await prisma.studentDocument.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StudentDocumentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StudentDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one StudentDocument.
   * @param {StudentDocumentUpsertArgs} args - Arguments to update or create a StudentDocument.
   * @example
   * // Update or create a StudentDocument
   * const studentDocument = await prisma.studentDocument.upsert({
   *   create: {
   *     // ... data to create a StudentDocument
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the StudentDocument we want to update
   *   }
   * })
   */
  upsert<T extends StudentDocumentUpsertArgs>(args: Prisma.SelectSubset<T, StudentDocumentUpsertArgs<ExtArgs>>): Prisma.Prisma__StudentDocumentClient<runtime.Types.Result.GetResult<Prisma.$StudentDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of StudentDocuments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentCountArgs} args - Arguments to filter StudentDocuments to count.
   * @example
   * // Count the number of StudentDocuments
   * const count = await prisma.studentDocument.count({
   *   where: {
   *     // ... the filter for the StudentDocuments we want to count
   *   }
   * })
  **/
  count<T extends StudentDocumentCountArgs>(
    args?: Prisma.Subset<T, StudentDocumentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StudentDocumentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a StudentDocument.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StudentDocumentAggregateArgs>(args: Prisma.Subset<T, StudentDocumentAggregateArgs>): Prisma.PrismaPromise<GetStudentDocumentAggregateType<T>>

  /**
   * Group by StudentDocument.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentDocumentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StudentDocumentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StudentDocumentGroupByArgs['orderBy'] }
      : { orderBy?: StudentDocumentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StudentDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the StudentDocument model
 */
readonly fields: StudentDocumentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for StudentDocument.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StudentDocumentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Organization<T extends Prisma.StudentDocument$OrganizationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDocument$OrganizationArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the StudentDocument model
 */
export interface StudentDocumentFieldRefs {
  readonly id: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly type: Prisma.FieldRef<"StudentDocument", 'DocumentType'>
  readonly fileName: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly fileSize: Prisma.FieldRef<"StudentDocument", 'Int'>
  readonly fileType: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly documentUrl: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly studentId: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly verified: Prisma.FieldRef<"StudentDocument", 'Boolean'>
  readonly verifiedBy: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly verifiedAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly rejected: Prisma.FieldRef<"StudentDocument", 'Boolean'>
  readonly rejectedBy: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly rejectedAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly rejectReason: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly uploadedBy: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly uploadedAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly note: Prisma.FieldRef<"StudentDocument", 'String'>
  readonly isDeleted: Prisma.FieldRef<"StudentDocument", 'Boolean'>
  readonly deletedAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"StudentDocument", 'DateTime'>
  readonly organizationId: Prisma.FieldRef<"StudentDocument", 'String'>
}
    

// Custom InputTypes
/**
 * StudentDocument findUnique
 */
export type StudentDocumentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter, which StudentDocument to fetch.
   */
  where: Prisma.StudentDocumentWhereUniqueInput
}

/**
 * StudentDocument findUniqueOrThrow
 */
export type StudentDocumentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter, which StudentDocument to fetch.
   */
  where: Prisma.StudentDocumentWhereUniqueInput
}

/**
 * StudentDocument findFirst
 */
export type StudentDocumentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter, which StudentDocument to fetch.
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentDocuments to fetch.
   */
  orderBy?: Prisma.StudentDocumentOrderByWithRelationInput | Prisma.StudentDocumentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentDocuments.
   */
  cursor?: Prisma.StudentDocumentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentDocuments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentDocuments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentDocuments.
   */
  distinct?: Prisma.StudentDocumentScalarFieldEnum | Prisma.StudentDocumentScalarFieldEnum[]
}

/**
 * StudentDocument findFirstOrThrow
 */
export type StudentDocumentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter, which StudentDocument to fetch.
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentDocuments to fetch.
   */
  orderBy?: Prisma.StudentDocumentOrderByWithRelationInput | Prisma.StudentDocumentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentDocuments.
   */
  cursor?: Prisma.StudentDocumentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentDocuments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentDocuments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentDocuments.
   */
  distinct?: Prisma.StudentDocumentScalarFieldEnum | Prisma.StudentDocumentScalarFieldEnum[]
}

/**
 * StudentDocument findMany
 */
export type StudentDocumentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter, which StudentDocuments to fetch.
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentDocuments to fetch.
   */
  orderBy?: Prisma.StudentDocumentOrderByWithRelationInput | Prisma.StudentDocumentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing StudentDocuments.
   */
  cursor?: Prisma.StudentDocumentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentDocuments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentDocuments.
   */
  skip?: number
  distinct?: Prisma.StudentDocumentScalarFieldEnum | Prisma.StudentDocumentScalarFieldEnum[]
}

/**
 * StudentDocument create
 */
export type StudentDocumentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * The data needed to create a StudentDocument.
   */
  data: Prisma.XOR<Prisma.StudentDocumentCreateInput, Prisma.StudentDocumentUncheckedCreateInput>
}

/**
 * StudentDocument createMany
 */
export type StudentDocumentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many StudentDocuments.
   */
  data: Prisma.StudentDocumentCreateManyInput | Prisma.StudentDocumentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * StudentDocument createManyAndReturn
 */
export type StudentDocumentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * The data used to create many StudentDocuments.
   */
  data: Prisma.StudentDocumentCreateManyInput | Prisma.StudentDocumentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * StudentDocument update
 */
export type StudentDocumentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * The data needed to update a StudentDocument.
   */
  data: Prisma.XOR<Prisma.StudentDocumentUpdateInput, Prisma.StudentDocumentUncheckedUpdateInput>
  /**
   * Choose, which StudentDocument to update.
   */
  where: Prisma.StudentDocumentWhereUniqueInput
}

/**
 * StudentDocument updateMany
 */
export type StudentDocumentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update StudentDocuments.
   */
  data: Prisma.XOR<Prisma.StudentDocumentUpdateManyMutationInput, Prisma.StudentDocumentUncheckedUpdateManyInput>
  /**
   * Filter which StudentDocuments to update
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * Limit how many StudentDocuments to update.
   */
  limit?: number
}

/**
 * StudentDocument updateManyAndReturn
 */
export type StudentDocumentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * The data used to update StudentDocuments.
   */
  data: Prisma.XOR<Prisma.StudentDocumentUpdateManyMutationInput, Prisma.StudentDocumentUncheckedUpdateManyInput>
  /**
   * Filter which StudentDocuments to update
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * Limit how many StudentDocuments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * StudentDocument upsert
 */
export type StudentDocumentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * The filter to search for the StudentDocument to update in case it exists.
   */
  where: Prisma.StudentDocumentWhereUniqueInput
  /**
   * In case the StudentDocument found by the `where` argument doesn't exist, create a new StudentDocument with this data.
   */
  create: Prisma.XOR<Prisma.StudentDocumentCreateInput, Prisma.StudentDocumentUncheckedCreateInput>
  /**
   * In case the StudentDocument was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StudentDocumentUpdateInput, Prisma.StudentDocumentUncheckedUpdateInput>
}

/**
 * StudentDocument delete
 */
export type StudentDocumentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
  /**
   * Filter which StudentDocument to delete.
   */
  where: Prisma.StudentDocumentWhereUniqueInput
}

/**
 * StudentDocument deleteMany
 */
export type StudentDocumentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentDocuments to delete
   */
  where?: Prisma.StudentDocumentWhereInput
  /**
   * Limit how many StudentDocuments to delete.
   */
  limit?: number
}

/**
 * StudentDocument.Organization
 */
export type StudentDocument$OrganizationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  where?: Prisma.OrganizationWhereInput
}

/**
 * StudentDocument without action
 */
export type StudentDocumentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentDocument
   */
  select?: Prisma.StudentDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentDocument
   */
  omit?: Prisma.StudentDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentDocumentInclude<ExtArgs> | null
}
